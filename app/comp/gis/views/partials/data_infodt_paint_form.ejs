<script>
    var $checks;

    $(document).ready(function() {
        var rObject;

        function fillTable(data) {
            //var e = esc;
            var html = [];
            var h = -1;

            data.geometry.coordinates.forEach(function(element, index) {
                html[++h] = '<tr id="row' + index + '" style="display: none;"><td>' + index + '</td>';
                html[++h] = '<td><input id="check' + index + '" name="check[_id]" type="checkbox" class="input-xs" value="' + data._id + '"></td>'
                    // html[++h] = '<td><input id="' + index + '" name="infodatatrack[properties][inventario]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    //     (typeof data.properties.inventario[index] !== "undefined" ? data.properties.inventario[index] : '') + '"></td>';
                html[++h] = '<td id="infodatatrack[properties][coordTimes]">' + $.format.date(data.properties.coordTimes[index], "dd-MM-yyyy HH:mm:ss") + '</td>';


                if (index == 0) {
                    html[++h] = '<td id="infodatatrack[properties][videoTime]">' + index + '</td>';
                } else {
                    var d2 = new Date($.format.date(data.properties.coordTimes[0], "yyyy-MM-dd HH:mm:ss"))
                    var d1 = new Date($.format.date(data.properties.coordTimes[index], "yyyy-MM-dd HH:mm:ss"))
                    var sec = (d1 - d2) / 1000;
                    var min = 0;
                    if (sec >= 60) {
                        var minutes = Math.floor(sec / 60);
                        var formattedSec = ("0" + (sec - minutes * 60)).slice(-2);
                        var seconds = formattedSec;
                    } else {
                        var minutes = 0;
                        var formattedSec = ("0" + sec).slice(-2);
                        var seconds = formattedSec;
                    }
                    html[++h] = '<td id="infodatatrack[properties][videoTime]">' + minutes + ':' + seconds + '</td>';
                }
                html[++h] = '<td id="infodatatrack[geometry][coordinates]">[ ' + data.geometry.coordinates[index] + ' ]</td>';
                html[++h] = '<td id="infodatatrack[properties][kobo]">';
                if (data.properties.kobo !== undefined && data.properties.kobo[index] !== null && typeof data.properties.kobo[index] !== "undefined" &&
                    data.properties.kobo[index].kobo_type !== undefined && data.properties.kobo[index].kobo_type !== '') {
                    if (data.properties.kobo[index].kobo_type.toUpperCase() === "BRIDGE") {
                        html[++h] = '<i class="fa fa-circle" name="modalKoboElem" data-params=\'{\"_id\":\"' + data.properties.kobo[index].kobo_id + '\",' +
                            ' \"kobo_type\":\"' + data.properties.kobo[index].kobo_type + '\"}\' aria-hidden="true" style="color: #F47983;" title="BRIDGE"> </i>';
                    } else if (data.properties.kobo[index].kobo_type.toUpperCase() === "ODT") {
                        html[++h] = '<i class="fa fa-circle" name="modalKoboElem" data-params=\'{\"_id\":\"' + data.properties.kobo[index].kobo_id + '\",' +
                            ' \"kobo_type\":\"' + data.properties.kobo[index].kobo_type + '\"}\' aria-hidden="true" style="color: blue;" title="ODT"> </i>';
                    } else {
                        html[++h] = '<i class="fa fa-circle" name="modalKoboElem" data-params=\'{\"_id\":\"' + data.properties.kobo[index].kobo_id + '\",' +
                            ' \"kobo_type\":\"' + data.properties.kobo[index].kobo_type + '\"}\' aria-hidden="true" style="color: green;" title="GEOTECHNICAL"> </i>';

                    }
                }
                if (data.properties.koboedit !== undefined && data.properties.koboedit[index] !== null &&
                    typeof data.properties.koboedit[index] !== "undefined" && data.properties.koboedit[index] !== '' && data.properties.koboedit.length > 0 &&
                    data.properties.koboedit[index].kobo_type !== undefined && data.properties.koboedit[index].kobo_type !== '' && data.properties.koboedit[index].kobo_type !== null) {
                    if (data.properties.koboedit[index].kobo_type.toUpperCase() === "BRIDGE") {
                        html[++h] = ' <i class="fa fa-pencil-square-o" name="modalKoboElem" data-params=\'{\"_id\":\"' + data.properties.koboedit[index].kobo_id + '\",' +
                            ' \"kobo_type\":\"' + data.properties.koboedit[index].kobo_type + '\"}\' aria-hidden="true" style="color: #F47983;" title="BRIDGE"> </i>';
                        html[++h] = ' <i class="fa fa-trash" name="deleteKoboElem" data-params=\'{\"kobo_id\":\"' + data.properties.koboedit[index].kobo_id + '\",' +
                            '\"index\":\"' + index + '\"}\' aria-hidden="true" style="color: #F47983;" title="DELETE BRIDGE"> </i>';
                    } else if (data.properties.koboedit[index].kobo_type.toUpperCase() === "ODT") {
                        html[++h] = ' <i class="fa fa-pencil-square-o" name="modalKoboElem" data-params=\'{\"_id\":\"' + data.properties.koboedit[index].kobo_id + '\",' +
                            ' \"kobo_type\":\"' + data.properties.koboedit[index].kobo_type + '\"}\' aria-hidden="true" style="color: blue;" title="ODT"> </i>';
                        html[++h] = ' <i class="fa fa-trash" name="deleteKoboElem" data-params=\'{\"kobo_id\":\"' + data.properties.koboedit[index].kobo_id + '\",' +
                            '\"index\":\"' + index + '\"}\' aria-hidden="true" style="color: blue;" title="DELETE ODT"> </i>';
                    } else {
                        html[++h] = ' <i class="fa fa-pencil-square-o" name="modalKoboElem" data-params=\'{\"_id\":\"' + data.properties.koboedit[index].kobo_id + '\",' +
                            ' \"kobo_type\":\"' + data.properties.koboedit[index].kobo_type + '\"}\' aria-hidden="true" style="color: green;" title="GEOTECHNICAL"> </i>';
                        html[++h] = ' <i class="fa fa-trash" name="deleteKoboElem" data-params=\'{\"kobo_id\":\"' + data.properties.koboedit[index].kobo_id + '\",' +
                            '\"index\":\"' + index + '\"}\' aria-hidden="true " style="color: green;" title="DELETE GEOTECHNICAL "> </i>';

                    }

                    html[++h] = '<input name="infodatatrack[properties][koboedit][kobo_id]" type="hidden" style="min-width: 100px;" class="form-control round-form input-sm" value="' + data.properties.koboedit[index].kobo_id + '">';
                    html[++h] = '<input name="infodatatrack[properties][koboedit][kobo_type]" type="hidden" style="min-width: 100px;" class="form-control round-form input-sm" value="' + data.properties.koboedit[index].kobo_type + '">';
                } else {
                    var strblnk = '';
                    html[++h] = '<input name="infodatatrack[properties][koboedit][kobo_id]" type="hidden" style="min-width: 100px;" class="form-control round-form input-sm" value="' + strblnk + '">';
                    html[++h] = '<input name="infodatatrack[properties][koboedit][kobo_type]" type="hidden" style="min-width: 100px;" class="form-control round-form input-sm" value="' + strblnk + '">';

                }
                html[++h] = '</td>';
                html[++h] = '<td id="infodatatrack[properties][pk]">' + data.properties.pk[index] + '</td>';
                html[++h] = '<td id="infodatatrack[properties][rcode]"><input name="infodatatrack[properties][rcode]" type="text" style="min-width: 100px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.rcode[index] !== "undefined" ? data.properties.rcode[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][rcategory]">' +
                    '<select name="infodatatrack[properties][rcategory]" class="form-control">' +
                    '<option ></option>' +
                    '<option >Main Road</option>' +
                    '<option >Secondary</option>' +
                    '<option >Feeder</option>' +
                    '<option >Urban</option>' +
                    '<option >1</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][iri]"><input name="infodatatrack[properties][iri]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.iri[index] !== "undefined" ? data.properties.iri[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][ropen]"><input name="infodatatrack[properties][ropen]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.ropen[index] !== "undefined" ? data.properties.ropen[index] : '') + '">' +
                    '</td>';

                html[++h] = '<td id="infodatatrack[properties][rmaterial]">' +
                    '<select name="infodatatrack[properties][rmaterial]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Asphalt</option>' +
                    '<option>Concrete</option>' +
                    '<option>Concrete Wheel Track</option>' +
                    '<option>Gravel / Tarrish</option>' +
                    '<option>Stone paving</option>' +
                    '<option>Earth / Grass</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';

                html[++h] = '<td id="infodatatrack[properties][rlaneinc]"><input name="infodatatrack[properties][rlaneinc]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.rlaneinc[index] !== "undefined" ? data.properties.rlaneinc[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rlanedecr]"><input name="infodatatrack[properties][rlanedecr]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.rlanedecr[index] !== "undefined" ? data.properties.rlanedecr[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rlanetotal]"><input name="infodatatrack[properties][rlanetotal]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.rlanetotal[index] !== "undefined" ? data.properties.rlanetotal[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rwidth]"><input name="infodatatrack[properties][rwidth]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.rwidth[index] !== "undefined" ? data.properties.rwidth[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rvcondition]">' +
                    '<select name="infodatatrack[properties][rvcondition]" class="form-control">' +
                    '<option ></option>' +
                    '<option>A</option>' +
                    '<option>B</option>' +
                    '<option>C</option>' +
                    '<option>D</option>' +
                    '<option>E</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';

                //ROAD Furniture
                html[++h] = '<td id="infodatatrack[properties][rbarriersexist]"><input name="infodatatrack[properties][rbarriersexist]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.rbarriersexist[index] !== "undefined" ? data.properties.rbarriersexist[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rbarrierstype]">' +
                    '<select name="infodatatrack[properties][rbarrierstype]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Safety Fences</option>' +
                    '<option>Pedestrian guardrail</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rsafetyfence]">' +
                    '<select name="infodatatrack[properties][rsafetyfence]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Bollard</option>' +
                    '<option>Concrete / Masonry</option>' +
                    '<option>Metal</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rbarrierfunct]">' +
                    '<select name="infodatatrack[properties][rbarrierfunct]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Yes</option>' +
                    '<option>No</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rsignalsexist]"><input name="infodatatrack[properties][rsignalsexist]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.rsignalsexist[index] !== "undefined" ? data.properties.rsignalsexist[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rsignalstype]">' +
                    '<select name="infodatatrack[properties][rsignalstype]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Vertical sign</option>' +
                    '<option>Horizontal sign</option>' +
                    '<option>Lit sign</option>' +
                    '<option>Gantry</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rvsignalstype]">' +
                    '<select name="infodatatrack[properties][rvsignalstype]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Directional / Information</option>' +
                    '<option>Regulatory</option>' +
                    '<option>Warning</option>' +
                    '<option>Other</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rsignalsfunct]">' +
                    '<select name="infodatatrack[properties][rsignalsfunct]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Yes</option>' +
                    '<option>No</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rlightexist]"><input name="infodatatrack[properties][rlightexist]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.rlightexist[index] !== "undefined" ? data.properties.rlightexist[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rlighttype]">' +
                    '<select name="infodatatrack[properties][rlighttype]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Lighting point</option>' +
                    '<option>Switch room</option>' +
                    '<option>Distribution point</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][rlightfunct]">' +
                    '<select name="infodatatrack[properties][rlightfunct]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Yes</option>' +
                    '<option>No</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>'; // html[++h] = '<td id="infodatatrack[properties][rfpastinterv]"><input name="infodatatrack[properties][rfpastinterv]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                //     (typeof data.properties.rfpastinterv[index] !== "undefined" ? data.properties.rfpastinterv[index] : '') + '">'+
                '</td>';
                // html[++h] = '<td id="infodatatrack[properties][rfyearinterv]"><input name="infodatatrack[properties][rfyearinterv]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                //     (typeof data.properties.rfyearinterv[index] !== "undefined" ? data.properties.rfyearinterv[index] : '') + '">'+
                '</td>';
                // html[++h] = '<td id="infodatatrack[properties][rfcomments]"><input name="infodatatrack[properties][rfcomments]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                //     (typeof data.properties.rfcomments[index] !== "undefined" ? data.properties.rfcomments[index] : '') + '">'+
                '</td>';
                html[++h] = '<td id="infodatatrack[properties][bexistence]">' +
                    '<select name="infodatatrack[properties][bexistence]" class="form-control">' +
                    '<option ></option>' +
                    '<option>YES</option>' +
                    '<option>NO</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][bcode]"><input name="infodatatrack[properties][bcode]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.bcode[index] !== "undefined" ? data.properties.bcode[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][blenght]"><input name="infodatatrack[properties][blenght]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.blenght[index] !== "undefined" ? data.properties.blenght[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][bwidth]"><input name="infodatatrack[properties][bwidth]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.bwidth[index] !== "undefined" ? data.properties.bwidth[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gcode]"><input name="infodatatrack[properties][gcode]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gcode[index] !== "undefined" ? data.properties.gcode[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gtype]">' +
                    '<select name="infodatatrack[properties][gtype]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Embankment</option>' +
                    '<option>Cutting</option>' +
                    '<option>Retaining_walls</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';

                html[++h] = '<td id="infodatatrack[properties][gposition]">' +
                    '<select name="infodatatrack[properties][gposition]" class="form-control">' +
                    '<option ></option>' +
                    '<option>RIGHT</option>' +
                    '<option>LEFT</option>' +
                    '<option>BOTH</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';

                html[++h] = '<td id="infodatatrack[properties][gmaterial]">' +
                    '<select name="infodatatrack[properties][gmaterial]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Concrete</option>' +
                    '<option>Masonry</option>' +
                    '<option>Gabion/Teramesh</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gnature]">' +
                    '<select name="infodatatrack[properties][gnature]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Homogeneous - massive rock</option>' +
                    '<option>Homogeneous - cracked rock</option>' +
                    '<option>Homogeneous - soil</option>' +
                    '<option>Heterogeneous – interstratified rock/soil</option>' +
                    '<option>Heterogeneous - rock blocks embedded in hard soil</option>' +
                    '<option>Heterogeneous - rock blocks embedded in soft soil</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gheight]"><input name="infodatatrack[properties][gheight]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gheight[index] !== "undefined" ? data.properties.gheight[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gh_h]">' +
                    '<select name="infodatatrack[properties][gh_h]" class="form-control">' +
                    '<option ></option>' +
                    '<option>0 - 10%</option>' +
                    '<option>10 - 25%</option>' +
                    '<option>25 - 50%</option>' +
                    '<option>50 - 75%</option>' +
                    '<option>>75%</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gslope]">' +
                    '<select name="infodatatrack[properties][gslope]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Vertical (90º)</option>' +
                    '<option>Steep (75-90º)</option>' +
                    '<option>Low (45-75º)</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gdistance]"><input name="infodatatrack[properties][gdistance]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gdistance[index] !== "undefined" ? data.properties.gdistance[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gshoulders]"><input name="infodatatrack[properties][gshoulders]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gshoulders[index] !== "undefined" ? data.properties.gshoulders[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][glength]"><input name="infodatatrack[properties][glength]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.glength[index] !== "undefined" ? data.properties.glength[index] : '') + '">' +
                    '</td>';

                html[++h] = '<td id="infodatatrack[properties][gtreatments]">' +
                    '<select name="infodatatrack[properties][gtreatments]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Yes</option>' +
                    '<option>No</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gvegetation]">' +
                    '<select name="infodatatrack[properties][gvegetation]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Yes</option>' +
                    '<option>No</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gtypevegetation]">' +
                    '<select name="infodatatrack[properties][gtypevegetation]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Arboreal</option>' +
                    '<option>Bush / Shrub</option>' +
                    '<option>Herbaceus</option>' +
                    '<option>No vegetation</option>' +
                    '<option>Other</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gvisualcondition]">' +
                    '<select name="infodatatrack[properties][gvisualcondition]" class="form-control">' +
                    '<option ></option>' +
                    '<option>A</option>' +
                    '<option>B</option>' +
                    '<option>C</option>' +
                    '<option>D</option>' +
                    '<option>E</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gcode2]"><input name="infodatatrack[properties][gcode2]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gcode2[index] !== "undefined" ? data.properties.gcode2[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gtype2]">' +
                    '<select name="infodatatrack[properties][gtype2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Embankment</option>' +
                    '<option>Cutting</option>' +
                    '<option>Retaining wall</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';

                html[++h] += '<td id="infodatatrack[properties][gposition2]">' +
                    '<select name="infodatatrack[properties][gposition2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>RIGHT</option>' +
                    '<option>LEFT</option>' +
                    '<option>BOTH</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';

                html[++h] += '<td id="infodatatrack[properties][gmaterial2]">' +
                    '<select name="infodatatrack[properties][gmaterial2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Concrete</option>' +
                    '<option>Masonry</option>' +
                    '<option>Gabion/Teramesh</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] += '<td id="infodatatrack[properties][gnature2]">' +
                    '<select name="infodatatrack[properties][gnature2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Homogeneous - massive rock</option>' +
                    '<option>Homogeneous - cracked rock</option>' +
                    '<option>Homogeneous - soil</option>' +
                    '<option>Heterogeneous – interstratified rock/soil</option>' +
                    '<option>Heterogeneous - rock blocks embedded in hard soil</option>' +
                    '<option>Heterogeneous - rock blocks embedded in soft soil</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gheight2]"><input name="infodatatrack[properties][gheight2]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gheight2[index] !== "undefined" ? data.properties.gheight2[index] : '') + '">' +
                    '</td>';
                html[++h] += '<td id="infodatatrack[properties][gh_h2]">' +
                    '<select name="infodatatrack[properties][gh_h2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>0 - 10%</option>' +
                    '<option>10 - 25%</option>' +
                    '<option>25 - 50%</option>' +
                    '<option>50 - 75%</option>' +
                    '<option>>75%</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] += '<td id="infodatatrack[properties][gslope2]">' +
                    '<select name="infodatatrack[properties][gslope2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Vertical (90º)</option>' +
                    '<option>Steep (75-90º)</option>' +
                    '<option>Low (45-75º)</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gdistance2]"><input name="infodatatrack[properties][gdistance2]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gdistance2[index] !== "undefined" ? data.properties.gdistance2[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][gshoulders2]"><input name="infodatatrack[properties][gshoulders2]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gshoulders2[index] !== "undefined" ? data.properties.gshoulders2[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][glength2]"><input name="infodatatrack[properties][glength2]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.glength2[index] !== "undefined" ? data.properties.glength2[index] : '') + '">' +
                    '</td>';
                html[++h] += '<td id="infodatatrack[properties][gtreatments2]">' +
                    '<select name="infodatatrack[properties][gtreatments2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Yes</option>' +
                    '<option>No</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] += '<td id="infodatatrack[properties][gvegetation2]">' +
                    '<select name="infodatatrack[properties][gvegetation2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Yes</option>' +
                    '<option>No</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] += '<td id="infodatatrack[properties][gtypevegetation2]">' +
                    '<select name="infodatatrack[properties][gtypevegetation2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Arboreal</option>' +
                    '<option>Bush / Shrub</option>' +
                    '<option>Herbaceus</option>' +
                    '<option>No vegetation</option>' +
                    '<option>Other</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                html[++h] += '<td id="infodatatrack[properties][gvisualcondition2]">' +
                    '<select name="infodatatrack[properties][gvisualcondition2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>A</option>' +
                    '<option>B</option>' +
                    '<option>C</option>' +
                    '<option>D</option>' +
                    '<option>E</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';

                html[++h] = '<td id="infodatatrack[properties][Ccode]"><input name="infodatatrack[properties][Ccode]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.Ccode[index] !== "undefined" ? data.properties.Ccode[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][Ctype]">' +
                    '<select name="infodatatrack[properties][Ctype]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Longitudinal</option>' +
                    '<option>Culvert</option>' +
                    '<option>Ford</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][dcode]"><input name="infodatatrack[properties][dcode]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.dcode[index] !== "undefined" ? data.properties.dcode[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][dtype]">' +
                    '<select name="infodatatrack[properties][dtype]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Longitudinal</option>' +
                    '<option>Culvert</option>' +
                    '<option>Ford</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][dsection]">' +
                    '<select name="infodatatrack[properties][dsection]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Concrete lined rectangular</option>' +
                    '<option>Concrete lined rectangular with cover</option>' +
                    '<option>Concrete lined V drain</option>' +
                    '<option>Kerb / Triangular</option>' +
                    '<option>Earth</option>' +
                    '<option>Other</option>' +
                    '</select>' +
                    '</td>';

                // html[++h] = '<td id="infodatatrack[properties][dcapacity]"><input name="infodatatrack[properties][dcapacity]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                //     (typeof data.properties.dcapacity[index] !== "undefined" ? data.properties.dcapacity[index] : '') + '">'+
                //'</td>';
                html[++h] = '<td id="infodatatrack[properties][dposition]">' +
                    '<select name="infodatatrack[properties][dposition]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Right</option>' +
                    '<option>Left</option>' +
                    '<option>Both</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][dcode2]"><input name="infodatatrack[properties][dcode2]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.dcode2[index] !== "undefined" ? data.properties.dcode2[index] : '') + '">' +
                    '</td>';
                html[++h] = '<td id="infodatatrack[properties][dtype2]">' +
                    '<select name="infodatatrack[properties][dtype2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Longitudinal</option>' +
                    '<option>Culvert</option>' +
                    '<option>Ford</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';
                html[++h] += '<td id="infodatatrack[properties][dsection2]">' +
                    '<select name="infodatatrack[properties][dsection2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Concrete lined rectangular</option>' +
                    '<option>Concrete lined rectangular with cover</option>' +
                    '<option>Concrete lined V drain</option>' +
                    '<option>Kerb / Triangular</option>' +
                    '<option>Earth</option>' +
                    '<option>Other</option>' +
                    '</select>' +
                    '</td>';

                html[++h] += '<td id="infodatatrack[properties][dposition2]">' +
                    '<select name="infodatatrack[properties][dposition2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Right</option>' +
                    '<option>Left</option>' +
                    '<option>Both</option>' +
                    '</select>' +
                    '</td>';
                html[++h] = '</tr>';
            });

            $('#bodytable').html(html.join(''));
            data.geometry.coordinates.forEach(function(element, index) {
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rcategory]"]').val(data.properties.rcategory[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rmaterial]"]').val(data.properties.rmaterial[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rvcondition]"]').val(data.properties.rvcondition[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gtype]"]').val(data.properties.gtype[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gposition]"]').val(data.properties.gposition[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gvisualcondition]"]').val(data.properties.gvisualcondition[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gtype2]"]').val(data.properties.gtype2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gposition2]"]').val(data.properties.gposition2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gvisualcondition2]"]').val(data.properties.gvisualcondition2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][dtype]"]').val(data.properties.dtype[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][dposition]"]').val(data.properties.dposition[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][dtype2]"]').val(data.properties.dtype2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][dposition2]"]').val(data.properties.dposition2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][bexistence]"]').val(data.properties.bexistence[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gslope]"]').val(data.properties.gslope[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gmaterial]"]').val(data.properties.gmaterial[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gnature]"]').val(data.properties.gnature[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gh_h]"]').val(data.properties.gh_h[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gtreatments]"]').val(data.properties.gtreatments[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gvegetation]"]').val(data.properties.gvegetation[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gtypevegetation]"]').val(data.properties.gtypevegetation[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][dsection]"]').val(data.properties.dsection[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gslope2]"]').val(data.properties.gslope2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gmaterial2]"]').val(data.properties.gmaterial2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gnature2]"]').val(data.properties.gnature2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gh_h2]"]').val(data.properties.gh_h2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gtreatments2]"]').val(data.properties.gtreatments2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gvegetation2]"]').val(data.properties.gvegetation2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gtypevegetation2]"]').val(data.properties.gtypevegetation2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][dsection2]"]').val(data.properties.dsection2[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rbarrierstype]"]').val(data.properties.rbarrierstype[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rsafetyfence]"]').val(data.properties.rsafetyfence[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rbarrierfunct]"]').val(data.properties.rbarrierfunct[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rsignalstype]"]').val(data.properties.rsignalstype[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rvsignalstype]"]').val(data.properties.rvsignalstype[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rsignalsfunct]"]').val(data.properties.rsignalsfunct[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rlighttype]"]').val(data.properties.rlighttype[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][rlightfunct]"]').val(data.properties.rlightfunct[index]);
            });

        };


        console.log("ready DOM!");
        rObject = <%- JSON.stringify(infodatatrack) %>
        fillTable(rObject)

        $('.table-responsive').hide();
        var options = {
            page_size: 50
        }
        $('#dataTable').pagination(rObject, options);



        $checks = $('#form').find("input[name='check[_id]']");

        var $inputsDC = $('#form').find("input[name='infodatatrack[properties][rdateconstruct]']");
        $("input[name='infodatatrack[properties][rdateconstruct]']").datepicker({
            dateFormat: 'dd-mm-yy',
            onSelect: function(date) {
                $inputsDC.trigger("blur");
            }

        });

        $('#road, #furniture, #bridges, #geotechnicals, #culvert, #drainage').click(function() {
            // alert("Hidden." + $(this).attr("id"));
            var $clase = $(this).attr("id");
            $('.' + $clase).each(function() {
                $(this).hide();
                $("tbody > tr > td[id='" + $(this).attr("id") + "']", $('#dataTable')).hide();
                if ($(this).attr("title") === 'Selection') {
                    if ($('[id^=check]').prop('checked') == undefined || $('[id^=check]').prop('checked') == false) {
                        $('[id^=check]').prop('checked', true);
                    } else {
                        $('[id^=check]').prop('checked', false);

                    }
                    $checks.trigger("change");

                }
            });

        });

        $("thead > tr > th", $('#dataTable')).click(function() {
            // Clic en cabecera individual
            // alert("Handler for .click() called.");
            // //console.log($(this).attr("id"));
            if ($(this).attr("id")) {
                $(this).hide();
                $("tbody > tr > td[id='" + $(this).attr("id") + "']", $('#dataTable')).hide();
            }
            if ($(this).attr("title") === 'Selection') {
                if ($('[id^=check]').prop('checked') == undefined || $('[id^=check]').prop('checked') == false) {
                    $('[id^=check]').prop('checked', true);
                } else {
                    $('[id^=check]').prop('checked', false);

                }
                $checks.trigger("change");

            }

        });

        $("#showall").click(function() {
            $("thead > tr > th", $('#dataTable')).each(function(index, elem) {
                if ($(this).attr("id")) {
                    $(this).show();
                    $("tbody > tr > td[id='" + $(this).attr("id") + "']", $('#dataTable')).show();
                } else {
                    $(this).show();

                }
            });
        });

        // INPUTS BLUR

        $(":text,input[name^=infodatatrack]").blur(function() {
            // console.log($(this));
            var $this = $(this);
            // console.log($this[0].name);
            var $val = $this[0].value;
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    // ////console.log('Check: ' + (index));
                    $("form").find("input[name=" + $.escapeSelector($this[0].name) + "]")[index].value = $val;

                }


            });
        });



        // SELECTS CHANGES
        var $inputsRLightFunct = $('#form').find('select[ name="infodatatrack[properties][rlightfunct]"]');
        $inputsRLightFunct.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsRLightFunct[index].value = $this.val();
                    } else {
                        $inputsRLightFunct[index].value = '';

                    }
                }


            });
        });
        var $inputsRLightType = $('#form').find('select[ name="infodatatrack[properties][rlighttype]"]');
        $inputsRLightType.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsRLightType[index].value = $this.val();
                    } else {
                        $inputsRLightType[index].value = '';

                    }
                }


            });

        });
        var $inputsRSignalsFunct = $('#form').find('select[ name="infodatatrack[properties][rsignalsfunct]"]');
        $inputsRSignalsFunct.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsRSignalsFunct[index].value = $this.val();
                    } else {
                        $inputsRSignalsFunct[index].value = '';

                    }
                }


            });
        });
        var $inputsRVSignalsType = $('#form').find('select[ name="infodatatrack[properties][rvsignalstype]"]');
        $inputsRVSignalsType.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsRVSignalsType[index].value = $this.val();
                    } else {
                        $inputsRVSignalsType[index].value = '';

                    }
                }


            });
        });
        var $inputsRSignalsType = $('#form').find('select[ name="infodatatrack[properties][rsignalstype]"]');
        $inputsRSignalsType.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsRSignalsType[index].value = $this.val();
                    } else {
                        $inputsRSignalsType[index].value = '';

                    }
                }


            });
        });
        var $inputsRBarrierFunct = $('#form').find('select[ name="infodatatrack[properties][rbarrierfunct]"]');
        $inputsRBarrierFunct.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsRBarrierFunct[index].value = $this.val();
                    } else {
                        $inputsRBarrierFunct[index].value = '';

                    }
                }


            });
        });
        var $inputsRSafetyFence = $('#form').find('select[ name="infodatatrack[properties][rsafetyfence]"]');
        $inputsRSafetyFence.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsRSafetyFence[index].value = $this.val();
                    } else {
                        $inputsRSafetyFence[index].value = '';

                    }
                }


            });
        });
        var $inputsRBarriersType = $('#form').find('select[ name="infodatatrack[properties][rbarrierstype]"]');
        $inputsRBarriersType.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsRBarriersType[index].value = $this.val();
                    } else {
                        $inputsRBarriersType[index].value = '';

                    }
                }


            });
        });
        var $inputsRC = $('#form').find('select[ name="infodatatrack[properties][rcategory]"]');
        $inputsRC.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsRC[index].value = $this.val();
                    } else {
                        $inputsRC[index].value = '';
                    }
                }


            });


        });
        var $inputsPM = $('#form').find('select[ name="infodatatrack[properties][rmaterial]"]');
        $inputsPM.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsPM[index].value = $this.val();
                    } else {
                        $inputsPM[index].value = '';

                    }
                }


            });
        });
        var $inputsCVC = $('#form').find('select[ name="infodatatrack[properties][rvcondition]"]');
        $inputsCVC.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsCVC[index].value = $this.val();
                    } else {
                        $inputsCVC[index].value = '';

                    }
                }


            });
        });
        var $inputsGT = $('#form').find('select[ name="infodatatrack[properties][gtype]"]');
        $inputsGT.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsGT[index].value = $this.val();
                    } else {
                        $inputsGT[index].value = '';

                    }
                }


            });
        });
        var $inputsGPOS = $('#form').find('select[ name="infodatatrack[properties][gposition]"]');
        $inputsGPOS.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {

                        $inputsGPOS[index].value = $this.val();
                    } else {
                        $inputsGPOS[index].value = '';
                    }
                }

            });
        });
        var $inputsGVPOS = $('#form').find('select[ name="infodatatrack[properties][gvisualcondition]"]');
        $inputsGVPOS.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {

                        $inputsGVPOS[index].value = $this.val();
                    } else {
                        $inputsGVPOS[index].value = '';
                    }
                }


            });
        });
        var $inputsDT = $('#form').find('select[ name="infodatatrack[properties][dtype]"]');
        $inputsDT.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));

                    if ($this.val() != '') {

                        $inputsDT[index].value = $this.val();
                    } else {
                        $inputsDT[index].value = '';
                    }

                }
            });
        });

        var $inputsDP = $('#form').find('select[ name="infodatatrack[properties][dposition]"]');
        $inputsDP.on('change', function() {
            var $this = $(this);
            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsDP[index].value = $this.val();
                    } else {
                        $inputsDP[index].value = '';
                    }
                }


            });
        });
        var $inputsBE = $('#form').find('select[ name="infodatatrack[properties][bexistence]"]');
        $inputsBE.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsBE[index].value = $this.val();
                    } else {
                        $inputsBE[index].value = '';
                    }
                }


            });

        });
        var $inputsGS = $('#form').find('select[ name="infodatatrack[properties][gslope]"]');
        $inputsGS.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsGS[index].value = $this.val();
                    } else {
                        $inputsGS[index].value = '';
                    }
                }


            });

        });
        var $inputsgmaterial = $('#form').find('select[ name="infodatatrack[properties][gmaterial]"]');
        $inputsgmaterial.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgmaterial[index].value = $this.val();
                    } else {
                        $inputsgmaterial[index].value = '';
                    }
                }


            });

        });
        var $inputsgnature = $('#form').find('select[ name="infodatatrack[properties][gnature]"]');
        $inputsgnature.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgnature[index].value = $this.val();
                    } else {
                        $inputsgnature[index].value = '';
                    }
                }


            });

        });
        var $inputsgh_h = $('#form').find('select[ name="infodatatrack[properties][gh_h]"]');
        $inputsgh_h.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgh_h[index].value = $this.val();
                    } else {
                        $inputsgh_h[index].value = '';
                    }
                }


            });

        });
        var $inputsgtreatments = $('#form').find('select[ name="infodatatrack[properties][gtreatments]"]');
        $inputsgtreatments.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgtreatments[index].value = $this.val();
                    } else {
                        $inputsgtreatments[index].value = '';
                    }
                }


            });

        });
        var $inputsgvegetation = $('#form').find('select[ name="infodatatrack[properties][gvegetation]"]');
        $inputsgvegetation.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgvegetation[index].value = $this.val();
                    } else {
                        $inputsgvegetation[index].value = '';
                    }
                }


            });

        });
        var $inputsgtypevegetation = $('#form').find('select[ name="infodatatrack[properties][gtypevegetation]"]');
        $inputsgtypevegetation.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgtypevegetation[index].value = $this.val();
                    } else {
                        $inputsgtypevegetation[index].value = '';
                    }
                }


            });

        });
        var $inputsdsection = $('#form').find('select[ name="infodatatrack[properties][dsection]"]');
        $inputsdsection.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsdsection[index].value = $this.val();
                    } else {
                        $inputsdsection[index].value = '';
                    }
                }


            });

        });
        var $inputsGS2 = $('#form').find('select[ name="infodatatrack[properties][gslope2]"]');
        $inputsGS2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsGS2[index].value = $this.val();
                    } else {
                        $inputsGS2[index].value = '';
                    }
                }


            });

        });
        var $inputsgmaterial2 = $('#form').find('select[ name="infodatatrack[properties][gmaterial2]"]');
        $inputsgmaterial2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgmaterial2[index].value = $this.val();
                    } else {
                        $inputsgmaterial2[index].value = '';
                    }
                }


            });

        });
        var $inputsgnature2 = $('#form').find('select[ name="infodatatrack[properties][gnature2]"]');
        $inputsgnature2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgnature2[index].value = $this.val();
                    } else {
                        $inputsgnature2[index].value = '';
                    }
                }


            });

        });
        var $inputsgh_h2 = $('#form').find('select[ name="infodatatrack[properties][gh_h2]"]');
        $inputsgh_h2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgh_h2[index].value = $this.val();
                    } else {
                        $inputsgh_h2[index].value = '';
                    }
                }


            });

        });
        var $inputsgtreatments2 = $('#form').find('select[ name="infodatatrack[properties][gtreatments2]"]');
        $inputsgtreatments2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgtreatments2[index].value = $this.val();
                    } else {
                        $inputsgtreatments2[index].value = '';
                    }
                }


            });

        });
        var $inputsgvegetation2 = $('#form').find('select[ name="infodatatrack[properties][gvegetation2]"]');
        $inputsgvegetation2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgvegetation2[index].value = $this.val();
                    } else {
                        $inputsgvegetation2[index].value = '';
                    }
                }


            });

        });
        var $inputsgtypevegetation2 = $('#form').find('select[ name="infodatatrack[properties][gtypevegetation2]"]');
        $inputsgtypevegetation2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsgtypevegetation2[index].value = $this.val();
                    } else {
                        $inputsgtypevegetation2[index].value = '';
                    }
                }


            });

        });
        var $inputsGT2 = $('#form').find('select[ name="infodatatrack[properties][gtype2]"]');
        $inputsGT2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsGT2[index].value = $this.val();
                    } else {
                        $inputsGT2[index].value = '';
                    }
                }


            });

        });
        var $inputsGPOS2 = $('#form').find('select[ name="infodatatrack[properties][gposition2]"]');
        $inputsGPOS2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsGPOS2[index].value = $this.val();
                    } else {
                        $inputsGPOS2[index].value = '';
                    }
                }


            });

        });
        var $inputsGVPOS2 = $('#form').find('select[ name="infodatatrack[properties][gvisualcondition2]"]');
        $inputsGVPOS2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsGVPOS2[index].value = $this.val();
                    } else {
                        $inputsGVPOS2[index].value = '';
                    }
                }


            });

        });
        var $inputsdsection2 = $('#form').find('select[ name="infodatatrack[properties][dsection2]"]');
        $inputsdsection2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsdsection2[index].value = $this.val();
                    } else {
                        $inputsdsection2[index].value = '';
                    }
                }


            });

        });
        var $inputsDT2 = $('#form').find('select[ name="infodatatrack[properties][dtype2]"]');
        $inputsDT2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsDT2[index].value = $this.val();
                    } else {
                        $inputsDT2[index].value = '';
                    }
                }


            });

        });

        var $inputsDP2 = $('#form').find('select[ name="infodatatrack[properties][dposition2]"]');
        $inputsDP2.on('change', function() {
            var $this = $(this);

            ////console.log('ID: ' + $this.attr("id"));
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    ////console.log('Check: ' + (index));
                    if ($this.val() != '') {
                        $inputsDP2[index].value = $this.val();
                    } else {
                        $inputsDP2[index].value = '';
                    }
                }


            });

        });

        $("#addcoord").click(function() {
            $('#addcoord').prop('disabled', true);
            var dataPost = {};
            dataPost._id = "<%- infodatatrack._id %>";

            var p1 = $.ajax({
                url: '/auth/WEB/infodatatrack/duplicate_rows',
                data: JSON.stringify(dataPost),
                type: 'POST',
                contentType: 'application/json'
            }, function(data) {
                // //console.log('dataRoad ' + JSON.stringify(data));
                return (data);
            });
            Promise.all([p1]).then(function(values) {
                dataTrack = values[0];
                // console.log(dataTrack);
                // location.reload();
                window.location.reload(true);
            });


        });

        $("#checkcoord").click(function() {

            $('[id="infodatatrack[geometry][coordinates]"]').each(function(index, elem) {
                // console.log(elem);
                if (index > 0) {
                    $val = $(this)[0].textContent;
                    // console.log($val);
                    $(this).html('<input name="infodatatrack[geometry][coordinates]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' + $val + '">');
                }
            });
            $('#form').find("input[name='infodatatrack[geometry][coordinates]']").css('min-width', '200px');
            var $inputsCOOR = $('#form').find("input[name='infodatatrack[geometry][coordinates]']");
            $inputsCOOR.blur(function() {
                var $this = $(this);
                if ($this.val() != '') {
                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            $inputsCOOR[index].value = $this.val();
                        }


                    });
                }
            });
        });


        // Añado valores de formato
        //$('#form').find("input").css('min-width', '50px');
        // $('#form').find("input[type='text']").css('min-width', '50px');
        $('#form').find("input[name='infodatatrack[properties][rdateconstruct]']").css('min-width', '80px');
        $('#form').find("select").css('min-width', '100px');
        $('.table-responsive').show();


        // Check clic - ROW colored
        var lastChecked = null;
        $checks.bind("click", function(e) {
            if (!lastChecked) {
                lastChecked = this;
                return;
            }

            if (e.shiftKey) {
                var start = $checks.index(this);
                var end = $checks.index(lastChecked);

                $checks.slice(Math.min(start, end), Math.max(start, end) + 1).prop('checked', lastChecked.checked);
                $checks.trigger("change");
            }

            lastChecked = this;
        });
        $checks.on("change", function() {
            if ($(this).is(':checked'))
                $(this).closest('tr').children('td').css('background-color', '#ccf5ff');
            else
                $(this).closest('tr').children('td').css('background-color', '');
        });

        var $elemkobos = $('#form').find('i[ name="modalKoboElem"]');
        var koboid;
        var obj
        $elemkobos.on('click', function() {
            var res = JSON.stringify($(this).data('params'));
            obj = JSON.parse(res);
            // console.log(obj);
            // alert('The modal is about to be shown.' + obj.id);
            koboid = obj._id;
            $("#modalKobo").modal("show");
        });
        $("#modalKobo").on('show.bs.modal', function() {
            var dataPost = {};
            dataPost = obj;
            dataPost._id = koboid;
            var camposShow = ["_id", "kobo_type", "_xform_id_string", "gposition", "gheight", "glength", "gdistance", "gslope", "blenght", "bwidth", "dlength", "coordinates"];
            var camposShowdisabled = ["_id", "kobo_type", "_xform_id_string"];
            var p1 = $.ajax({
                url: '/auth/WEB/koboinfo/list_koboinfos/' + koboid,
                data: JSON.stringify(dataPost),
                type: 'POST',
                contentType: 'application/json'
            }, function(data) {
                // console.log('koboinfo ' + JSON.stringify(data));
                return (data);
            });
            Promise.all([p1]).then(function(values) {
                $("#formkobo").empty();
                koboinfo = values[0];
                var ifdtid = $("input[name*='infodatatrack[_id]']").val();
                var ini = 0;
                var fin = rObject.geometry.coordinates.length;
                $("#formkobo").append('<input name="kobo[ifdtid]" required class="form-control" value="' + ifdtid + '" type="hidden">');
                // alert(ifdtid);
                //console.log(koboinfo);
                $.each(koboinfo, function(key, value) {
                    if (key === 'properties') {
                        $.each(value, function(kprop, vprop) {
                            //console.log(kprop, vprop);
                            if (kprop === "_attachments") {
                                $("#photo").empty();
                                $.each(vprop, function(kfoto, vfoto) {
                                    var fotosmall = vfoto.replace(".jpg", "-small.jpg");
                                    $("#photo").append('<img src="' + fotosmall + '">');
                                    $("#formkobo").append('<input name="kobo[properties][' + kprop + ']" required class="form-control" value="' + vfoto + '" type="hidden">');
                                });
                            } else if (kprop === "dphoto" || kprop === "bphoto" || kprop === "gphoto") {
                                $.each(vprop, function(kfoto, vfoto) {
                                    $("#formkobo").append('<input name="kobo[properties][' + kprop + ']" required class="form-control" value="' + vfoto + '" type="hidden">');
                                });
                            } else {
                                if (camposShow.indexOf(kprop) >= 0) {
                                    $("#formkobo").append('<label class="col-sm-2 col-sm-2 control-label">' + kprop + '</label>');
                                    if (camposShowdisabled.indexOf(kprop) >= 0) {
                                        $("#formkobo").append('<div class="col-sm-4">' +
                                            '<input name="kobo[properties][' + kprop + ']" required class="form-control" value="' + vprop + '" readonly>' +
                                            '</div>');
                                    } else {
                                        $("#formkobo").append('<div class="col-sm-4">' +
                                            '<input name="kobo[properties][' + kprop + ']" required class="form-control" value="' + vprop + '">' +
                                            '</div>');
                                    }
                                } else {
                                    $("#formkobo").append('<input name="kobo[properties][' + kprop + ']" required class="form-control" value="' + vprop + '" type="hidden">');
                                }
                            }

                        });
                    } else if (key === 'geometry') {
                        $.each(value, function(kgeom, vgeom) {
                            // console.log(kgeom, vgeom);
                            if (kgeom === 'coordinates') {
                                $("#formkobo").append('<div class="form-group">');
                                $("#formkobo").append('<label class="col-sm-2 col-sm-2 control-label">' + kgeom + '</label>');
                                $("#formkobo").append('<div class="col-sm-10">' +
                                    '<input name="kobo[geometry][' + kgeom + ']" required class="form-control" value="' + vgeom + '" readonly>' +
                                    '</div>');
                                $("#formkobo").append('</div>');
                            } else {
                                $("#formkobo").append('<input name="kobo[geometry][' + kgeom + ']" required class="form-control" value="' + vgeom + '" type="hidden">');
                            }
                            // (kgeom === 'coordinates') ? $("input[name*='kobo[geometry][" + kgeom + "]']").val(vgeom): false;

                        });
                    } else {
                        if (camposShow.indexOf(key) >= 0) {
                            $("#formkobo").append('<label class="col-sm-2 col-sm-2 control-label">' + key + '</label>');
                            $("#formkobo").append('<div class="col-sm-4">' +
                                '<input name="kobo[' + key + ']" required class="form-control" value="' + value + '" readonly>' +
                                '</div>');
                        } else {
                            $("#formkobo").append('<input name="kobo[' + key + ']" required class="form-control" value="' + value + '" type="hidden">');
                        }

                    }


                    // console.log(key, value);
                    //$("input[name*='kobo[" + key + "]']").val(value);
                });
                var optionsstr = '';
                for (var i = ini; i < fin; i++) {
                    optionsstr += '<option>' + i + '</option>';
                }
                $("#formkobo").append('<label class="col-sm-2 col-sm-2 control-label">coord ini</label>');
                $("#formkobo").append('<div class="col-sm-4">' +
                    '<select class="form-control" name="kobo[ifdtini]" required class="form-control">' +
                    optionsstr +
                    '</select></div>');

                var $inputsCOORini = $('#formkobo').find('select[ name="kobo[ifdtini]"]');
                $inputsCOORini.on('change', function() {
                    $('#coordsubmit').prop('disabled', false);
                    var $this = $(this);
                    if ($this.val() != '') {
                        ////console.log('ID: ' + $this.attr("id"));
                        ////console.log('Check: ' + (index));
                        $('#formkobo').find("input[name='kobo[geometry][coordinates]']").val(rObject.geometry.coordinates[parseInt($this.val())]);

                    }
                });
                $("#formkobo").append('<label class="col-sm-2 col-sm-2 control-label">coord fin</label>');
                $("#formkobo").append('<div class="col-sm-4">' +
                    '<select class="form-control" name="kobo[ifdtfin]" required class="form-control">' +
                    optionsstr +
                    '</select></div>');
                // location.reload();
                // window.location.reload(true);
            });

        });

        var $deleteKoboElem = $('#form').find('i[name="deleteKoboElem"]');
        $deleteKoboElem.click(function() {
            var $this = $(this);
            var res = JSON.stringify($(this).data('params'));
            obj = JSON.parse(res);
            console.log(obj);
            console.log(rObject._id);
            var dataPost = {};
            dataPost = obj;
            dataPost._id = rObject._id;
            console.log(dataPost);
            console.log('/auth/WEB/infodatatrack/delrows/' + rObject._id + '/' + obj.index + '/' + obj.kobo_id);

            var p1 = $.ajax({
                url: '/auth/WEB/infodatatrack/delrows/' + rObject._id + '/' + obj.index + '/' + obj.kobo_id,
                data: JSON.stringify(dataPost),
                type: 'POST',
                contentType: 'application/json'
            }, function(data) {
                // console.log('koboinfo ' + JSON.stringify(data));
                return (data);
            });
            Promise.all([p1]).then(function(values) {
                dataTrack = values[0];
                // console.log(dataTrack);
                // location.reload();
                window.location.reload(true);

            });

        });




    });

    function duplicateCols(option) {
        switch (option) {
            case 'geo':
                // alert('geotechnicals');
                var geo_html = '<td id="infodatatrack[properties][gtype2]">' +
                    '<select name="infodatatrack[properties][gtype2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Embankment</option>' +
                    '<option>Cutting</option>' +
                    '<option>Retaining wall</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';

                geo_html += '<td id="infodatatrack[properties][gposition2]">' +
                    '<select name="infodatatrack[properties][gposition2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>RIGHT</option>' +
                    '<option>LEFT</option>' +
                    '<option>BOTH</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';

                geo_html += '<td id="infodatatrack[properties][gmaterial2]">' +
                    '<select name="infodatatrack[properties][gmaterial2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Concrete</option>' +
                    '<option>Masonry</option>' +
                    '<option>Gabion/Teramesh</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                geo_html += '<td id="infodatatrack[properties][gnature2]">' +
                    '<select name="infodatatrack[properties][gnature2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Homogeneous - massive rock</option>' +
                    '<option>Homogeneous - cracked rock</option>' +
                    '<option>Homogeneous - soil</option>' +
                    '<option>Heterogeneous – interstratified rock/soil</option>' +
                    '<option>Heterogeneous - rock blocks embedded in hard soil</option>' +
                    '<option>Heterogeneous - rock blocks embedded in soft soil</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                geo_html += '<td id="infodatatrack[properties][gheight2]">' +
                    '<input name="infodatatrack[properties][gheight2]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="">' +
                    '</td>';
                geo_html += '<td id="infodatatrack[properties][gh_h2]">' +
                    '<select name="infodatatrack[properties][gh_h2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>0 - 10%</option>' +
                    '<option>10 - 25%</option>' +
                    '<option>25 - 50%</option>' +
                    '<option>50 - 75%</option>' +
                    '<option>>75%</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                geo_html += '<td id="infodatatrack[properties][gslope2]">' +
                    '<select name="infodatatrack[properties][gslope2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Vertical (90º)</option>' +
                    '<option>Steep (75-90º)</option>' +
                    '<option>Low (45-75º)</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                geo_html += '<td id="infodatatrack[properties][gdistance2]">' +
                    '<input name="infodatatrack[properties][gdistance2]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="">' +
                    '</td>';

                geo_html += '<td id="infodatatrack[properties][gtreatments2]">' +
                    '<select name="infodatatrack[properties][gtreatments2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Yes</option>' +
                    '<option>No</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                geo_html += '<td id="infodatatrack[properties][gvegetation2]">' +
                    '<select name="infodatatrack[properties][gvegetation2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Yes</option>' +
                    '<option>No</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                geo_html += '<td id="infodatatrack[properties][gtypevegetation2]">' +
                    '<select name="infodatatrack[properties][gtypevegetation2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Arboreal</option>' +
                    '<option>Bush / Shrub</option>' +
                    '<option>Herbaceus</option>' +
                    '<option>No vegetation</option>' +
                    '<option>Other</option>' +
                    '<option>NA</option>' +
                    '<option>Unknown</option>' +
                    '</select>' +
                    '</td>';
                geo_html += '<td id="infodatatrack[properties][gvisualcondition2]">' +
                    '<select name="infodatatrack[properties][gvisualcondition2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>A</option>' +
                    '<option>B</option>' +
                    '<option>C</option>' +
                    '<option>D</option>' +
                    '<option>E</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';
                $('#bodytable').find('tr').each(function() {
                    $(this).find("td[id='" + $.escapeSelector('infodatatrack[properties][gvisualcondition]') + "']")
                        .eq(0).after(geo_html);
                });
                geo_header = '<th id="infodatatrack[properties][gtype2]" title="Type of earthwork" class="geotechnicals">TYPE2</th>';
                geo_header += '<th id="infodatatrack[properties][gposition2]" title="Position" class="geotechnicals">POS2</th>';
                geo_header += '<th id="infodatatrack[properties][gmaterial2]" title="Material - Retaining walls" class="geotechnicals">MAT2</th>';
                geo_header += '<th id="infodatatrack[properties][gnature2]" title="Nature - Earthworks" class="geotechnicals">NATURE2</th>';
                geo_header += '<th id="infodatatrack[properties][gheight2]" title="Height (m)" class="geotechnicals">HEIGHT2</th>';
                geo_header += '<th id="infodatatrack[properties][gh_h2]" title="Relation h/H (m)" class="geotechnicals">H_H2</th>';
                geo_header += '<th id="infodatatrack[properties][gslope2]" title="Slope (º)" class="geotechnicals">SLOPE2</th>';
                geo_header += '<th id="infodatatrack[properties][gdistance2]" title="Distance to road (m)" class="geotechnicals">DIST2</th>';
                geo_header += '<th id="infodatatrack[properties][gtreatments2]" title="Existence of Geotech Treatments" class="geotechnicals">GEO TREAT2</th>';
                geo_header += '<th id="infodatatrack[properties][gvegetation2]" title="Existence of Vegetation" class="geotechnicals">VEGETATION2</th>';
                geo_header += '<th id="infodatatrack[properties][gtypevegetation2]" title="Type of Vegetation" class="geotechnicals">TYPE VEG2</th>';
                geo_header += '<th id="infodatatrack[properties][gvisualcondition2]" title="Current visual condition" class="geotechnicals">VISUAL COND2</th>';
                $('#dataTable').find('thead > tr').each(function(key, value) {
                    if (key === 0) {
                        $(this).find("th").eq(4).after('<th colspan="12" scope="colgroup" class="geotechnicals">' +
                            'NEW GEOTECHNICALS</th>');
                    } else {
                        $(this).find("th[id='" + $.escapeSelector('infodatatrack[properties][gvisualcondition]') + "']")
                            .eq(0).after(geo_header);

                    }
                });
                $('#geo_link').hide();
                var $inputsGS2 = $('#form').find('select[ name="infodatatrack[properties][gslope2]"]');
                $inputsGS2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsGS2[index].value = $this.val();
                            } else {
                                $inputsGS2[index].value = '';

                            }
                        }


                    });

                });
                var $inputsgmaterial2 = $('#form').find('select[ name="infodatatrack[properties][gmaterial2]"]');
                $inputsgmaterial2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsgmaterial2[index].value = $this.val();
                            } else {
                                $inputsgmaterial2[index].value = '';

                            }
                        }


                    });

                });
                var $inputsgnature2 = $('#form').find('select[ name="infodatatrack[properties][gnature2]"]');
                $inputsgnature2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsgnature2[index].value = $this.val();
                            } else {
                                $inputsgnature2[index].value = '';

                            }
                        }


                    });

                });
                var $inputsgh_h2 = $('#form').find('select[ name="infodatatrack[properties][gh_h2]"]');
                $inputsgh_h2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsgh_h2[index].value = $this.val();
                            } else {
                                $inputsgh_h2[index].value = '';

                            }
                        }


                    });

                });
                var $inputsgtreatments2 = $('#form').find('select[ name="infodatatrack[properties][gtreatments2]"]');
                $inputsgtreatments2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsgtreatments2[index].value = $this.val();
                            } else {
                                $inputsgtreatments2[index].value = '';

                            }
                        }


                    });

                });
                var $inputsgvegetation2 = $('#form').find('select[ name="infodatatrack[properties][gvegetation2]"]');
                $inputsgvegetation2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsgvegetation2[index].value = $this.val();
                            } else {
                                $inputsgvegetation2[index].value = '';

                            }
                        }


                    });

                });
                var $inputsgtypevegetation2 = $('#form').find('select[ name="infodatatrack[properties][gtypevegetation2]"]');
                $inputsgtypevegetation2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsgtypevegetation2[index].value = $this.val();
                            } else {
                                $inputsgtypevegetation2[index].value = '';

                            }
                        }


                    });

                });
                var $inputsGT2 = $('#form').find('select[ name="infodatatrack[properties][gtype2]"]');
                $inputsGT2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsGT2[index].value = $this.val();
                            } else {
                                $inputsGT2[index].value = '';

                            }
                        }


                    });

                });
                var $inputsGPOS2 = $('#form').find('select[ name="infodatatrack[properties][gposition2]"]');
                $inputsGPOS2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsGPOS2[index].value = $this.val();
                            } else {
                                $inputsGPOS2[index].value = '';

                            }
                        }


                    });

                });
                var $inputsGVPOS2 = $('#form').find('select[ name="infodatatrack[properties][gvisualcondition2]"]');
                $inputsGVPOS2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsGVPOS2[index].value = $this.val();
                            } else {
                                $inputsGVPOS2[index].value = '';

                            }
                        }


                    });

                });
                break;
            case 'drainage':
                // alert('drainage ');
                var dra_html = '<td id="infodatatrack[properties][dtype2]">' +
                    '<select name="infodatatrack[properties][dtype2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Longitudinal</option>' +
                    '<option>Culvert</option>' +
                    '<option>Ford</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>' +
                    '</td>';
                dra_html += '<td id="infodatatrack[properties][dsection2]">' +
                    '<select name="infodatatrack[properties][dsection2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Concrete lined rectangular</option>' +
                    '<option>Concrete lined rectangular with cover</option>' +
                    '<option>Concrete lined V drain</option>' +
                    '<option>Kerb / Triangular</option>' +
                    '<option>Earth</option>' +
                    '<option>Other</option>' +
                    '</select>' +
                    '</td>';

                dra_html += '<td id="infodatatrack[properties][dposition2]">' +
                    '<select name="infodatatrack[properties][dposition2]" class="form-control">' +
                    '<option ></option>' +
                    '<option>Right</option>' +
                    '<option>Left</option>' +
                    '<option>Both</option>' +
                    '</select>' +
                    '</td>';
                $('#bodytable').find('tr').each(function() {
                    $(this).find("td[id='" + $.escapeSelector('infodatatrack[properties][dposition]') + "']")
                        .eq(0).after(dra_html);
                });
                var dra_head = '<th id="infodatatrack[properties][dtype2]" title="Type of drainage" class="drainage">TYPE</th>';
                dra_head += '<th id="infodatatrack[properties][dsection2]" title="Longitudinal drainage - Type of section" class="drainage">SECTION</th>';
                dra_head += '<th id="infodatatrack[properties][dposition2]" title="Drainage position" class="drainage">DPOS</th>';
                $('#dataTable').find('thead > tr').each(function(key, value) {
                    if (key === 0) {
                        $(this).find("th").eq(5).after('<th colspan="3" scope="colgroup" class="drainage">' +
                            'NEW DRAINAGES</th>');
                    } else {
                        $(this).find("th[id='" + $.escapeSelector('infodatatrack[properties][dposition]') + "']")
                            .eq(0).after(dra_head);

                    }
                });
                $('#dra_link').hide();

                var $inputsdsection2 = $('#form').find('select[ name="infodatatrack[properties][dsection2]"]');
                $inputsdsection2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsdsection2[index].value = $this.val();
                            } else {
                                $inputsdsection2[index].value = '';

                            }
                        }


                    });

                });
                var $inputsDT2 = $('#form').find('select[ name="infodatatrack[properties][dtype2]"]');
                $inputsDT2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsDT2[index].value = $this.val();
                            } else {
                                $inputsDT2[index].value = '';

                            }
                        }


                    });

                });

                var $inputsDP2 = $('#form').find('select[ name="infodatatrack[properties][dposition2]"]');
                $inputsDP2.on('change', function() {
                    var $this = $(this);

                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            if ($this.val() != '') {
                                $inputsDP2[index].value = $this.val();
                            } else {
                                $inputsDP2[index].value = '';

                            }
                        }


                    });

                });

                break;

            default:
                break;
        }
        $('#form').find("select").css('min-width', '100px');
        // INPUTS BLUR

        $(":text,input[name^=infodatatrack]").blur(function() {
            // console.log($(this));
            var $this = $(this);
            // console.log($this[0].name);
            var $val = $this[0].value;
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    // ////console.log('Check: ' + (index));
                    $("form").find("input[name=" + $.escapeSelector($this[0].name) + "]")[index].value = $val;

                }


            });
        });

    };
</script>