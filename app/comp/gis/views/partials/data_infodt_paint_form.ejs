<script>
    $(document).ready(function() {
        var rObject;

        function fillTable(data) {
            //var e = esc;
            var html = [];
            var h = -1;

            data.geometry.coordinates.forEach(function(element, index) {
                html[++h] = '<tr id="row' + index + '" style="display: none;"><td>' + index + '</td>';
                html[++h] = '<td><input id="check' + index + '" name="check[_id]" type="checkbox" class="input-xs" value="' + data._id + '"></td>'
                    // html[++h] = '<td><input id="' + index + '" name="infodatatrack[properties][inventario]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    //     (typeof data.properties.inventario[index] !== "undefined" ? data.properties.inventario[index] : '') + '"></td>';
                html[++h] = '<td id="infodatatrack[properties][coordTimes]">' + $.format.date(data.properties.coordTimes[index], "dd-MM-yyyy HH:mm:ss") + '</td>';


                if (index == 0) {
                    html[++h] = '<td id="infodatatrack[properties][videoTime]">' + index + '</td>';
                } else {
                    var d2 = new Date($.format.date(data.properties.coordTimes[0], "yyyy-MM-dd HH:mm:ss"))
                    var d1 = new Date($.format.date(data.properties.coordTimes[index], "yyyy-MM-dd HH:mm:ss"))
                    var sec = (d1 - d2) / 1000;
                    var min = 0;
                    if (sec >= 60) {
                        var minutes = Math.floor(sec / 60);
                        var formattedSec = ("0" + (sec - minutes * 60)).slice(-2);
                        var seconds = formattedSec;
                    } else {
                        var minutes = 0;
                        var formattedSec = ("0" + sec).slice(-2);
                        var seconds = formattedSec;
                    }
                    html[++h] = '<td id="infodatatrack[properties][videoTime]">' + minutes + ':' + seconds + '</td>';
                }
                html[++h] = '<td id="infodatatrack[geometry][coordinates]">[ ' + data.geometry.coordinates[index] + ' ]</td>';
                html[++h] = '<td id="infodatatrack[properties][pk]">' + data.properties.pk[index] + '</td>';
                html[++h] = '<td id="infodatatrack[properties][rcode]"><input name="infodatatrack[properties][rcode]" type="text" style="min-width: 100px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.rcode[index] !== "undefined" ? data.properties.rcode[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][road_category]">' +
                    '<select name="infodatatrack[properties][road_category]" class="form-control">' +
                    '<option >Main Road</option>' +
                    '<option >Secondary</option>' +
                    '<option >Feeder</option>' +
                    '<option >Urban</option>' +
                    '<option >1</option>' +
                    '</select>';
                html[++h] = '<td id="infodatatrack[properties][open_traffic]"><input name="infodatatrack[properties][open_traffic]" type="text" style="min-width: 50;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.open_traffic[index] !== "undefined" ? data.properties.open_traffic[index] : '') + '">';

                html[++h] = '<td id="infodatatrack[properties][pavement_material]">' +
                    '<select name="infodatatrack[properties][pavement_material]" class="form-control">' +
                    '<option>Asphalt</option>' +
                    '<option>Concrete</option>' +
                    '<option>Concrete Wheel Track</option>' +
                    '<option>Gravel / Tarrish</option>' +
                    '<option>Stone paving</option>' +
                    '<option>Earth / Grass</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '</select>';

                html[++h] = '<td id="infodatatrack[properties][number_lanes_inc]"><input name="infodatatrack[properties][number_lanes_inc]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.number_lanes_inc[index] !== "undefined" ? data.properties.number_lanes_inc[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][number_lanes_dec]"><input name="infodatatrack[properties][number_lanes_dec]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.number_lanes_dec[index] !== "undefined" ? data.properties.number_lanes_dec[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][total_number_lanes]"><input name="infodatatrack[properties][total_number_lanes]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.total_number_lanes[index] !== "undefined" ? data.properties.total_number_lanes[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][total_width]"><input name="infodatatrack[properties][total_width]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.total_width[index] !== "undefined" ? data.properties.total_width[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][current_visual_condition]">' +
                    '<select name="infodatatrack[properties][current_visual_condition]" class="form-control">' +
                    '<option>A</option>' +
                    '<option>B</option>' +
                    '<option>C</option>' +
                    '<option>D</option>' +
                    '<option>E</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>';

                html[++h] = '<td id="infodatatrack[properties][existence_barriers_condition]"><input name="infodatatrack[properties][existence_barriers_condition]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.existence_barriers_condition[index] !== "undefined" ? data.properties.existence_barriers_condition[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][typology_barriers]"><input name="infodatatrack[properties][typology_barriers]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.typology_barriers[index] !== "undefined" ? data.properties.typology_barriers[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][typology_safety_fence]"><input name="infodatatrack[properties][typology_safety_fence]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.typology_safety_fence[index] !== "undefined" ? data.properties.typology_safety_fence[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][functionality_asset_functioning_expected_barrier]"><input name="infodatatrack[properties][functionality_asset_functioning_expected_barrier]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.functionality_asset_functioning_expected_barrier[index] !== "undefined" ? data.properties.functionality_asset_functioning_expected_barrier[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][existence_signposting_road_signs_condition]"><input name="infodatatrack[properties][existence_signposting_road_signs_condition]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.existence_signposting_road_signs_condition[index] !== "undefined" ? data.properties.existence_signposting_road_signs_condition[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][typology_signaling]"><input name="infodatatrack[properties][typology_signaling]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.typology_signaling[index] !== "undefined" ? data.properties.typology_signaling[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][typology_vertical_signaling]"><input name="infodatatrack[properties][typology_vertical_signaling]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.typology_vertical_signaling[index] !== "undefined" ? data.properties.typology_vertical_signaling[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][functionality_asset_functioning_expected_signal]"><input name="infodatatrack[properties][functionality_asset_functioning_expected_signal]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.functionality_asset_functioning_expected_signal[index] !== "undefined" ? data.properties.functionality_asset_functioning_expected_signal[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][existence_street_lighting]"><input name="infodatatrack[properties][existence_street_lighting]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.existence_street_lighting[index] !== "undefined" ? data.properties.existence_street_lighting[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][typology_street_lighting]"><input name="infodatatrack[properties][typology_street_lighting]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.typology_street_lighting[index] !== "undefined" ? data.properties.typology_street_lighting[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][functionality_asset_functioning_expected_light]"><input name="infodatatrack[properties][functionality_asset_functioning_expected_light]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.functionality_asset_functioning_expected_light[index] !== "undefined" ? data.properties.functionality_asset_functioning_expected_light[index] : '') + '">';
                // html[++h] = '<td id="infodatatrack[properties][bcode]"><input name="infodatatrack[properties][bcode]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                //     (typeof data.properties.bcode[index] !== "undefined" ? data.properties.bcode[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][bexists]">' +
                    '<select name="infodatatrack[properties][bexists]" class="form-control">' +
                    '<option>YES</option>' +
                    '<option>NO</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>';
                html[++h] = '<td id="infodatatrack[properties][blenght]"><input name="infodatatrack[properties][blenght]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.blenght[index] !== "undefined" ? data.properties.blenght[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][bwidth]"><input name="infodatatrack[properties][bwidth]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.bwidth[index] !== "undefined" ? data.properties.bwidth[index] : '') + '">';
                // html[++h] = '<td id="infodatatrack[properties][gcode]"><input name="infodatatrack[properties][gcode]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                //     (typeof data.properties.gcode[index] !== "undefined" ? data.properties.gcode[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][gtype]">' +
                    '<select name="infodatatrack[properties][gtype]" class="form-control">' +
                    '<option>Embankment</option>' +
                    '<option>Cutting</option>' +
                    '<option>Retaining wall</option>' +
                    '<option>Other</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>';

                html[++h] = '<td id="infodatatrack[properties][gposition]">' +
                    '<select name="infodatatrack[properties][gposition]" class="form-control">' +
                    '<option>Right</option>' +
                    '<option>Left</option>' +
                    '<option>Both</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>';

                html[++h] = '<td id="infodatatrack[properties][gmaterial]"><input name="infodatatrack[properties][gmaterial]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gmaterial[index] !== "undefined" ? data.properties.gmaterial[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][gnature]"><input name="infodatatrack[properties][gnature]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gnature[index] !== "undefined" ? data.properties.gnature[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][gheight]"><input name="infodatatrack[properties][gheight]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gheight[index] !== "undefined" ? data.properties.gheight[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][gh_h]"><input name="infodatatrack[properties][gh_h]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gh_h[index] !== "undefined" ? data.properties.gh_h[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][gslope]">' +
                    '<select name="infodatatrack[properties][gslope]" class="form-control">' +
                    '<option>1</option>' +
                    '<option>2</option>' +
                    '<option>3</option>' +
                    '<option>4</option>' +
                    '<option>N/A</option>' +
                    '</select>';
                html[++h] = '<td id="infodatatrack[properties][gdistance]"><input name="infodatatrack[properties][gdistance]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gdistance[index] !== "undefined" ? data.properties.gdistance[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][gtreatments]"><input name="infodatatrack[properties][gtreatments]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gtreatments[index] !== "undefined" ? data.properties.gtreatments[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][gvegetation]"><input name="infodatatrack[properties][gvegetation]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gvegetation[index] !== "undefined" ? data.properties.gvegetation[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][gtypevegetation]"><input name="infodatatrack[properties][gtypevegetation]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                    (typeof data.properties.gtypevegetation[index] !== "undefined" ? data.properties.gtypevegetation[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][gvisualcondition]">' +
                    '<select name="infodatatrack[properties][gvisualcondition]" class="form-control">' +
                    '<option>A</option>' +
                    '<option>B</option>' +
                    '<option>C</option>' +
                    '<option>D</option>' +
                    '<option>E</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>';

                // html[++h] = '<td id="infodatatrack[properties][dcode]"><input name="infodatatrack[properties][dcode]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                //     (typeof data.properties.dcode[index] !== "undefined" ? data.properties.dcode[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][dtype]">' +
                    '<select name="infodatatrack[properties][dtype]" class="form-control">' +
                    '<option>Longitudinal</option>' +
                    '<option>Culvert</option>' +
                    '<option>Ford</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>';
                html[++h] = '<td id="infodatatrack[properties][dsection]">' +
                    '<select name="infodatatrack[properties][dsection]" class="form-control">' +
                    '<option>Longitudinal</option>' +
                    '<option>Culvert</option>' +
                    '<option>Ford</option>' +
                    '<option>Unknown</option>' +
                    '<option>N/A</option>' +
                    '<option>1</option>' +
                    '</select>';

                // html[++h] = '<td id="infodatatrack[properties][dcapacity]"><input name="infodatatrack[properties][dcapacity]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' +
                //     (typeof data.properties.dcapacity[index] !== "undefined" ? data.properties.dcapacity[index] : '') + '">';
                html[++h] = '<td id="infodatatrack[properties][dposition]">' +
                    '<select name="infodatatrack[properties][dposition]" class="form-control">' +
                    '<option>Right</option>' +
                    '<option>Left</option>' +
                    '<option>Both</option>' +
                    '</select>';
                html[++h] = '</tr>';
            });

            $('#bodytable').html(html.join(''));
            data.geometry.coordinates.forEach(function(element, index) {
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][road_category]"]').val(data.properties.road_category[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][pavement_material]"]').val(data.properties.pavement_material[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][current_visual_condition]"]').val(data.properties.current_visual_condition[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gtype]"]').val(data.properties.gtype[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gposition]"]').val(data.properties.gposition[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gvisualcondition]"]').val(data.properties.gvisualcondition[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][dtype]"]').val(data.properties.dtype[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][dposition]"]').val(data.properties.dposition[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][bexists]"]').val(data.properties.bexists[index]);
                $('#row' + index).children('td').children('select').filter('[name="infodatatrack[properties][gslope]"]').val(data.properties.gslope[index]);
            });

        };


        console.log("ready DOM!");
        rObject = <%- JSON.stringify(infodatatrack) %>
        fillTable(rObject)

        $('.table-responsive').hide();
        var options = {
            page_size: 50
        }
        $('#dataTable').pagination(rObject, options);



        var $checks = $('#form').find("input[name='check[_id]']");

        var $inputsDC = $('#form').find("input[name='infodatatrack[properties][date_construction]']");
        $("input[name='infodatatrack[properties][date_construction]']").datepicker({
            dateFormat: 'dd-mm-yy',
            onSelect: function(date) {
                $inputsDC.trigger("blur");
            }

        });


        $("thead > tr > th", $('#dataTable')).click(function() {
            // alert("Handler for .click() called.");
            // //console.log($(this).attr("id"));
            if ($(this).attr("id")) {
                $(this).hide();
                $("tbody > tr > td[id='" + $(this).attr("id") + "']", $('#dataTable')).hide();
            }
            if ($(this).attr("title") === 'Selection') {
                if ($('[id^=check]').prop('checked') == undefined || $('[id^=check]').prop('checked') == false) {
                    $('[id^=check]').prop('checked', true);
                } else {
                    $('[id^=check]').prop('checked', false);

                }
                $checks.trigger("change");

            }

        });

        $("#showall").click(function() {
            $("thead > tr > th", $('#dataTable')).each(function(index, elem) {
                if ($(this).attr("id")) {
                    $(this).show();
                    $("tbody > tr > td[id='" + $(this).attr("id") + "']", $('#dataTable')).show();
                }
            });
        });

        // INPUTS BLUR

        $(":text,input[name^=infodatatrack]").blur(function() {
            // console.log($(this));
            var $this = $(this);
            // console.log($this[0].name);
            var $val = $this[0].value;
            $checks.each(function(index) {
                $check = $(this);
                if ($check.prop("checked")) {
                    // ////console.log('Check: ' + (index));
                    $("form").find("input[name=" + $.escapeSelector($this[0].name) + "]")[index].value = $val;

                }


            });
        });



        // SELECTS CHANGES
        var $inputsRC = $('#form').find('select[ name="infodatatrack[properties][road_category]"]');
        $inputsRC.on('change', function() {
            var $this = $(this);
            if ($this.val() != '') {
                ////console.log('ID: ' + $this.attr("id"));
                $checks.each(function(index) {
                    $check = $(this);
                    if ($check.prop("checked")) {
                        ////console.log('Check: ' + (index));
                        $inputsRC[index].value = $this.val();
                    }


                });
            }
        });
        var $inputsPM = $('#form').find('select[ name="infodatatrack[properties][pavement_material]"]');
        $inputsPM.on('change', function() {
            var $this = $(this);
            if ($this.val() != '') {
                ////console.log('ID: ' + $this.attr("id"));
                $checks.each(function(index) {
                    $check = $(this);
                    if ($check.prop("checked")) {
                        ////console.log('Check: ' + (index));
                        $inputsPM[index].value = $this.val();
                    }


                });
            }
        });
        var $inputsCVC = $('#form').find('select[ name="infodatatrack[properties][current_visual_condition]"]');
        $inputsCVC.on('change', function() {
            var $this = $(this);
            if ($this.val() != '') {
                ////console.log('ID: ' + $this.attr("id"));
                $checks.each(function(index) {
                    $check = $(this);
                    if ($check.prop("checked")) {
                        ////console.log('Check: ' + (index));
                        $inputsCVC[index].value = $this.val();
                    }


                });
            }
        });
        var $inputsGT = $('#form').find('select[ name="infodatatrack[properties][gtype]"]');
        $inputsGT.on('change', function() {
            var $this = $(this);
            if ($this.val() != '') {
                ////console.log('ID: ' + $this.attr("id"));
                $checks.each(function(index) {
                    $check = $(this);
                    if ($check.prop("checked")) {
                        ////console.log('Check: ' + (index));
                        $inputsGT[index].value = $this.val();
                    }


                });
            }
        });
        var $inputsGPOS = $('#form').find('select[ name="infodatatrack[properties][gposition]"]');
        $inputsGPOS.on('change', function() {
            var $this = $(this);
            if ($this.val() != '') {
                ////console.log('ID: ' + $this.attr("id"));
                $checks.each(function(index) {
                    $check = $(this);
                    if ($check.prop("checked")) {
                        ////console.log('Check: ' + (index));
                        $inputsGPOS[index].value = $this.val();
                    }


                });
            }
        });
        var $inputsGVPOS = $('#form').find('select[ name="infodatatrack[properties][gvisualcondition]"]');
        $inputsGVPOS.on('change', function() {
            var $this = $(this);
            if ($this.val() != '') {
                ////console.log('ID: ' + $this.attr("id"));
                $checks.each(function(index) {
                    $check = $(this);
                    if ($check.prop("checked")) {
                        ////console.log('Check: ' + (index));
                        $inputsGVPOS[index].value = $this.val();
                    }


                });
            }
        });
        var $inputsDT = $('#form').find('select[ name="infodatatrack[properties][dtype]"]');
        $inputsDT.on('change', function() {
            var $this = $(this);
            if ($this.val() != '') {
                ////console.log('ID: ' + $this.attr("id"));
                $checks.each(function(index) {
                    $check = $(this);
                    if ($check.prop("checked")) {
                        ////console.log('Check: ' + (index));
                        $inputsDT[index].value = $this.val();
                    }


                });
            }
        });

        var $inputsDP = $('#form').find('select[ name="infodatatrack[properties][dposition]"]');
        $inputsDP.on('change', function() {
            var $this = $(this);
            if ($this.val() != '') {
                ////console.log('ID: ' + $this.attr("id"));
                $checks.each(function(index) {
                    $check = $(this);
                    if ($check.prop("checked")) {
                        ////console.log('Check: ' + (index));
                        $inputsDP[index].value = $this.val();
                    }


                });
            }
        });
        var $inputsBE = $('#form').find('select[ name="infodatatrack[properties][bexists]"]');
        $inputsBE.on('change', function() {
            var $this = $(this);
            if ($this.val() != '') {
                ////console.log('ID: ' + $this.attr("id"));
                $checks.each(function(index) {
                    $check = $(this);
                    if ($check.prop("checked")) {
                        ////console.log('Check: ' + (index));
                        $inputsBE[index].value = $this.val();
                    }


                });
            }
        });
        var $inputsGS = $('#form').find('select[ name="infodatatrack[properties][gslope]"]');
        $inputsGS.on('change', function() {
            var $this = $(this);
            if ($this.val() != '') {
                ////console.log('ID: ' + $this.attr("id"));
                $checks.each(function(index) {
                    $check = $(this);
                    if ($check.prop("checked")) {
                        ////console.log('Check: ' + (index));
                        $inputsGS[index].value = $this.val();
                    }


                });
            }
        });



        $("#addcoord").click(function() {
            $('#addcoord').prop('disabled', true);
            var dataPost = {};
            dataPost._id = "<%- infodatatrack._id %>";

            var p1 = $.ajax({
                url: '/auth/WEB/infodatatrack/duplicate_rows',
                data: JSON.stringify(dataPost),
                type: 'POST',
                contentType: 'application/json'
            }, function(data) {
                // //console.log('dataRoad ' + JSON.stringify(data));
                return (data);
            });
            Promise.all([p1]).then(function(values) {
                dataTrack = values[0];
                // console.log(dataTrack);
                // location.reload();
                window.location.reload(true);
            });


        });

        $("#checkcoord").click(function() {

            $('[id="infodatatrack[geometry][coordinates]"]').each(function(index, elem) {
                // console.log(elem);
                if (index > 0) {
                    $val = $(this)[0].textContent;
                    // console.log($val);
                    $(this).html('<input name="infodatatrack[geometry][coordinates]" type="text" style="min-width: 50px;" class="form-control round-form input-sm" value="' + $val + '">');
                }
            });
            $('#form').find("input[name='infodatatrack[geometry][coordinates]']").css('min-width', '200px');
            var $inputsCOOR = $('#form').find("input[name='infodatatrack[geometry][coordinates]']");
            $inputsCOOR.blur(function() {
                var $this = $(this);
                if ($this.val() != '') {
                    ////console.log('ID: ' + $this.attr("id"));
                    $checks.each(function(index) {
                        $check = $(this);
                        if ($check.prop("checked")) {
                            ////console.log('Check: ' + (index));
                            $inputsCOOR[index].value = $this.val();
                        }


                    });
                }
            });
        });


        // Añado valores de formato
        //$('#form').find("input").css('min-width', '50px');
        // $('#form').find("input[type='text']").css('min-width', '50px');
        $('#form').find("input[name='infodatatrack[properties][date_construction]']").css('min-width', '80px');
        $('#form').find("select").css('min-width', '100px');
        $('.table-responsive').show();


        // Check clic - ROW colored
        var lastChecked = null;
        $checks.bind("click", function(e) {
            if (!lastChecked) {
                lastChecked = this;
                return;
            }

            if (e.shiftKey) {
                var start = $checks.index(this);
                var end = $checks.index(lastChecked);

                $checks.slice(Math.min(start, end), Math.max(start, end) + 1).prop('checked', lastChecked.checked);
                $checks.trigger("change");
            }

            lastChecked = this;
        });
        $checks.on("change", function() {
            if ($(this).is(':checked'))
                $(this).closest('tr').children('td').css('background-color', '#ccf5ff');
            else
                $(this).closest('tr').children('td').css('background-color', '');
        });






    });
</script>