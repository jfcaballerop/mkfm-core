<!-- <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script> -->
<script>
    $(document).ready(function () {
        // console.log('query_scripts.ejs');
        var numFilters = 0;
        var arrFilters = [];
        var arrFiltersValues = [];
        var filtersDB = <%- JSON.stringify(filters) %>;
        var config = <%- JSON.stringify(config) %>;
        // console.log(config);
        // console.log(filtersDB);
        var arrColumnsChecked = [];
        var arrMarkerPos = [];
        var arrMarkerContent = [];
        // console.log(filtersDB);
        var listHtml = '';
        var arrList = [];
        var arrGroups = [];
        var arrSubGroups = [];
        var numColumnsFilter = 2;
        var valueColumnsSelected = '';

        $.each(filtersDB, function (k, v) {
            listHtml = '';
            // listHtml += '<li class="list-group-item">';
            listHtml += '<label class="checkbox-inline" id = "LabelSwitchOption' + k +
                '" for = "SwitchOption' + k +
                '" title = "" > ';
            listHtml +=
                '<input type="checkbox" id="SwitchOption' + k + '" name="SwitchOption' + k + '" >' + k +
                ' </label>';
            // listHtml += '</li>';
            // console.log(k);
            console.log(k + ' ' + v + ' ' + config[k]);
            if (arrList[config[k].group] === undefined) {
                arrList[config[k].group] = [];
                arrGroups[config[k].group] = [];
            }
            if (arrList[config[k].group][config[k].subgroup] === undefined) {
                arrList[config[k].group][config[k].subgroup] = [];
                arrGroups[config[k].group].push(config[k].subgroup);
            }
            arrList[config[k].group][config[k].subgroup].push(listHtml);


        });
        // console.log(arrList);
        var gant = 'initial value';
        for (var g of Object.keys(arrGroups)) {
            gant = g;
            var panel = '';
            // debug('uno');
            // debug(g.replace(/ /g, ''));
            // debug(gant.replace(/ /g, ''));
            // debug('dos');
            // debug(g.replace(/ /g, '').replace('-LEFTSIDE', '').replace('-RIGHTSIDE', ''));
            // debug(gant.replace(/ /g, '').replace('-LEFTSIDE', '').replace('-RIGHTSIDE', ''));
            // debug(g.replace(/ /g, '').replace('-LEFTSIDE', '').replace('-RIGHTSIDE', '') ===
            //     gant.replace(/ /g, '').replace('-LEFTSIDE', '').replace('-RIGHTSIDE', ''));
            // if (g.replace(/ /g, '').replace('-LEFTSIDE', '').replace('-RIGHTSIDE', '') !==
            //     gant.replace(/ /g, '').replace('-LEFTSIDE', '').replace('-RIGHTSIDE', '')) {
            panel += '<div  class="ui-widget-content ui-corner-all">' +
                '<h5 id="effect' + g.replace(/ /g, '').replace('-LEFTSIDE', '').replace('-RIGHTSIDE', '') +
                '" class="ui-widget-header ui-corner-all primary">' +
                g.replace(' - LEFT SIDE', '').replace(' - RIGHT SIDE', '') +
                '</h5><div id="Contenteffect' + g.replace(/ /g, '').replace('-LEFTSIDE', '').replace(
                    '-RIGHTSIDE', '') +
                '" style="display: none;">';
            // }
            for (var sg of arrGroups[g]) {
                // console.log(g);
                // console.log(arrList[g]);

                var list = '';
                for (var l of arrList[g][sg]) {
                    list += '<p>' + l + '</p>';
                }
                panel += '<div  class="ui-widget-content ui-corner-all">' +
                    '<h6 id="effect' + sg.replace(/ |:|&/g, '') + '" class="ui-widget-header ui-corner-all">' +
                    sg +
                    '</h6><div class="form-panel" id="Contenteffect' + sg.replace(
                        / |:|&/g, '') + '" style="display: none;">' + list +
                    '</div></div>';



            }
            panel += '</div></div>'
            $('#ListSwitchOption').append(panel);
        }

        $('[id^=effect]').click(function () {

            $('#Content' + $(this).attr('id')).toggle('blind', {}, 500);
        });


        $('#ListSwitchOption label[id^=LabelSwitchOption]').each(function (index) {
            // console.log('deberia ir despues');
            if (config[$(this).attr('id').replace('LabelSwitchOption', '')] !== undefined) {

                $(this).attr('title', config[$(this).attr('id').replace('LabelSwitchOption', '')][
                    'desc'
                ]);
            } else {
                $(this).attr('title', $(this).attr('id').replace('LabelSwitchOption', ''));

            }
        });

        $('#ListSwitchOption input[name^=SwitchOption]').change(function () {
            // console.log($(this));
            // console.log($(this).attr('name').replace('SwitchOption', ''));
            var filter = $(this).attr('name').replace('SwitchOption', '');
            var dataPost = {};



            if ($('#' + filter).length == 0) {
                // sino existe el campo creo la capa con los valores de la base de datos
                numFilters++;
                arrFilters.push(filter);
                // console.log(arrFilters);
                var p1 = $.ajax({
                    url: '/auth/WEB/query/get_filter_values/' + filter,
                    data: JSON.stringify(dataPost),
                    type: 'POST',
                    contentType: 'application/json'
                }, function (data) {
                    //// console.log('filtros ' + JSON.stringify(data));
                    return (data);
                });
                Promise.all([p1]).then(function (values) {
                    //// console.log(values);

                    if (values[0].result === "ERROR") {
                        // console.log(values[0].result);
                    } else {
                        // TODO: Stop spinner        
                        // console.log(values[0].result);
                        //// console.log(values[0].filters);
                        var filters = values[0].filters;
                        var filterDiv = "";
                        if (filters.length > 500) {
                            filterDiv = 'Mas de 500 resultados disponibles';
                        } else {
                            filterDiv += '<select id="select' + filter +
                                '" multiple="" class="form-control">';
                            $.each(filters, function (i, v) {
                                filterDiv += '<option>' + v + '</option>';

                            });
                            filterDiv += '</select>';
                        }
                        $('#rowfilter').append('<div id="' + filter + '" class="col-md-3">' +
                            filter + '<div class="form-panel">' + filterDiv +
                            '</div></div>')


                    }
                });
            } else {
                // si existe debo borrar la capa
                numFilters--;
                $('#' + filter).remove();
                var index = arrFilters.indexOf(filter);
                if (index > -1) {
                    arrFilters.splice(index, 1);
                }
                // console.log(arrFilters);
            }
            if (numFilters > 0) {
                $('#filterApply').prop('disabled', false);
            } else {

                $('#filterApply').prop('disabled', true);
            }

        });

        $('#filterApply').click(function () {
            // console.log(arrFilters);
            // almaceno los filtros y los valores de los filtros para mandarlos al server
            $.each(arrFilters, function (i, val) {
                var optionsVal = $('#select' + val).val();
                arrFiltersValues[val] = optionsVal;
                // console.log(arrFiltersValues);
            });
            // limpio la parte de seleccion
            $('#filterApply').remove();
            $('#messageFilter').empty();
            $('#rowfilter').empty();
            $('#ListSwitchOption input[type=checkbox]').prop('disabled', true);
            // relleno con los campos a mostrar
            var totalFiltersDB = Object.keys(filtersDB).length;
            $('#messageFilter').append('<i class="fa fa-angle-right"></i>Columns Selection￼<br>' +
                'Total Filters: ' + totalFiltersDB);
            $('#messageFilter').append(
                '￼<br><button id="columnApply" type="button" class="btn btn-success" ><i class="fa fa-table"></i> view results</button> ' +
                '<button id="cancel" type="button" class="btn btn-danger" ><i class="fa fa-times"></i> cancel</button>'

            );
            var numelemcol = Math.round(totalFiltersDB / 4);
            var filterDiv = '';
            var count = 0;
            var colnum = 0;

            filterDiv += '<select id="selectFilterColums" class="form-control">';
            // console.log(arrList);
            var panel = '';
            for (var key of Object.keys(arrGroups)) {
                for (var ksg of arrGroups[key]) {

                    filterDiv += '<option value="column' + ksg.replace(/ |:|&|,/g, '') + '">' + key +
                        '::' + ksg + '</option>';
                    var list = [];
                    var nc = Math.trunc(12 / numColumnsFilter);
                    var nc_count = numColumnsFilter;
                    for (var l of arrList[key][ksg]) {
                        if (nc_count == numColumnsFilter) {
                            nc_count = 0;
                        }
                        if (list[nc_count] === undefined) {
                            list[nc_count] = [];
                        }
                        list[nc_count].push('<p> ' + l.replace('name="SwitchOption',
                            'name="check').replace('id="SwitchOption',
                            'id="check') + ' </p>');
                        nc_count++;
                    }
                    panel += '<div class="col-md-12" id="column' + ksg.replace(
                        / |:|&/g, '') + '" style="display: none;">';
                    panel += '<div class="row">';
                    for (var c = 0; c < numColumnsFilter; c++) {
                        panel += '<div class="col-md-' + nc + '">';
                        if (list[c] !== undefined) {
                            for (var lv of list[c]) {
                                panel += lv;
                            }
                        }
                        panel += '</div>';
                    }

                    panel += '</div></div>';



                }
            }

            filterDiv += '</select>';
            $('#rowfilter').append(
                '<div id="filterColumns" class="col-md-12">Groups<div class="form-panel">' +
                filterDiv + '</div></div>');
            $('#rowfilter').append(panel);
            $('#selectFilterColums').on('change', function (e) {
                var optionSelected = $("option:selected", this);
                var valueSelected = this.value;
                // console.log(valueSelected);
                if (valueColumnsSelected !== '') {
                    $('#' + valueColumnsSelected).hide();
                }
                $('#' + valueSelected).toggle('blind', {}, 500);
                valueColumnsSelected = valueSelected;
                // $('[id^=effect]').click(function () {});
            });

            // for (var key in filtersDB) {
            //     filterDiv += '<div class="checkbox"><label>' +
            //         '<input type="checkbox" id="check' + key + '" name="check' + key + '" value="' +
            //         key + '">' + key +
            //         '</label></div>';
            //     count++;
            //     if (count == numelemcol) {
            //         if (colnum == 0) {

            //             $('#rowfilter').append(
            //                 '<div id="filterColumns" class="col-md-3">Columns<div class="form-panel">' +
            //                 filterDiv + '</div></div>')
            //         } else {

            //             $('#rowfilter').append(
            //                 '<div id="filterColumns" class="col-md-3"><div class="form-panel">' +
            //                 filterDiv + '</div></div>')
            //         }
            //         colnum++;
            //         filterDiv = "";
            //         count = 0;
            //     }
            // }
            // $('#rowfilter').append('<div id="filterColumns" class="col-md-3"><div class="form-panel">' +
            //     filterDiv + '</div></div>')


        });
        var dataTableExist = setInterval(function () {
            if ($('#dataTable').length) {
                // console.log("Exists dataTable!");
                clearInterval(dataTableExist);
                $('#exportbutton').click(function (e) {
                    var name = 'query_results_' + Math.floor((Math.random() * 9999999) +
                        1000000) + '.xls';
                    $("#dataTable").table2excel({
                        // exclude CSS class
                        exclude: ".noExl",
                        name: "Export data",
                        filename: name //do not include extension
                    });


                });
                $('#mapsbutton').click(function (e) {
                    var name = 'query_results_' + Math.floor((Math.random() * 9999999) +
                        1000000) + '.xls';
                    $("#dataTable").remove();
                    // cargo el mapa de Google Maps
                    var v_height = $(window.top).height() - 250;
                    var v_width = $('#bodyQuery .content-panel').width();
                    $('#exportbutton').hide();

                    $('#bodyQuery .content-panel').append('<br><div id="map" style="width:' +
                        v_width + 'px; height:' + v_height +
                        'px; position: relative; overflow: hidden;">');

                    var mapcenter = <%- JSON.stringify(maps_center) %>;
                    var configzoom = <%- JSON.stringify(maps_zoom) %>;
                    map = new GMaps({
                        div: '#map',
                        lat: mapcenter.lat,
                        lng: mapcenter.lng
                    });
                    map.setZoom(configzoom * 1);
                    $.each(arrMarkerPos, function (k, v) {
                        var infoContent = '';
                        map.addMarker({
                            lat: v[1],
                            lng: v[0],
                            icon: {
                                path: google.maps.SymbolPath.CIRCLE,
                                strokeColor: 'black',
                                strokeOpacity: 0.5,
                                scale: 5
                            },
                            title: 'Query Result',
                            infoWindow: {
                                content: arrMarkerContent[k]
                            }
                        });

                    })
                });
            }
        });
        var checkExist = setInterval(function () {
            if ($('#cancel').length) {
                clearInterval(checkExist);
                $('#cancel').click(function () {
                    location.reload();

                });

            }

            if ($('#columnApply').length) {
                // console.log("Exists!");
                clearInterval(checkExist);
                $('#columnApply').click(function () {
                    $('input[name^=check]:checked').each(function () {

                        arrColumnsChecked.push($(this).attr('name').replace('check', ''));
                    })

                    // console.log(arrColumnsChecked);
                    var dataPost = {
                        "columns": arrColumnsChecked
                    };
                    for (var [kfc, vfc] of Object.keys(arrFiltersValues).entries()) {
                        dataPost[vfc] = arrFiltersValues[vfc];
                        // console.length(k + ' ' + v)

                    };
                    var p1 = $.ajax({
                        url: '/auth/WEB/query/paint_results',
                        data: JSON.stringify(dataPost),
                        type: 'POST',
                        contentType: 'application/json'
                    }, function (data) {
                        //// console.log('filtros ' + JSON.stringify(data));
                        return (data);
                    });
                    Promise.all([p1]).then(function (values) {
                        // console.log(values);
                        if (values[0].result === "ERROR") {
                            // console.log(values[0].data);
                            alert(values[0].errormessage);
                        } else {
                            // console.log(values[0].data);
                            $('#bodyQuery').empty();
                            var table = '';
                            table +=
                                '<div class="col-md-12"><div class="content-panel">';
                            if (values[0].data.length > 0) {
                                table +=
                                    '<button id="exportbutton" type="button" class="btn btn-success" ><i class="fa fa-file-excel-o" ></i> EXPORT</button>';
                                table +=
                                    '<button id="mapsbutton" type="button" class="btn btn-primary" ><i class="fa fa-location-arrow" ></i> LOCATION</button>';
                            }
                            table +=
                                '<table id="dataTable" class="table table-bordered table-striped table-condensed"><tbody>';
                            var header = true;
                            var headerColum = [];
                            if (values[0].data.length == 0) {
                                table += '<tr>';
                                table +=
                                    '<td><div class="alert alert-danger"><b>Error!</b> Not values returned.</div></td>';
                                table += '</tr>';
                                $('#exportbutton').hide();
                                $('#mapsbutton').hide();

                            }

                            $.each(values[0].data, function (k, v) {
                                if (v.geometry.coordinates.length > 0) {
                                    if (header) {
                                        header = false;
                                        table += '<tr>';
                                        // table += '<th>id</th>';
                                        // table += '<th>GPS</th>';

                                        if (arrColumnsChecked.length > 0) {
                                            $.each(Object.keys(v.properties).reverse(),
                                                function (k1, v1) {
                                                    if (arrColumnsChecked.indexOf(
                                                            v1) >= 0) {
                                                        table += '<th>' +
                                                            v1 +
                                                            '</th>';
                                                        headerColum.push(v1);
                                                    }

                                                });
                                        } else {
                                            table +=
                                                '<td><div class="alert alert-danger"><b>Error!</b> Not columns checked.</div></td>';
                                            table += '</tr>';
                                            $('#exportbutton').hide();
                                            $('#mapsbutton').hide();
                                        }
                                    }
                                    if (arrColumnsChecked.length > 0) {

                                        for (var row = 0; row < v.properties[
                                                headerColum[0]].length; row++) {
                                            table += '<tr>';
                                            // table += '<td>' + v._id + '</td>';
                                            // table += '<td>' + v.geometry.coordinates[row] + '</td>';
                                            arrMarkerPos.push(v.geometry.coordinates[
                                                row]);
                                            var markerContent = '';
                                            $.each(Object.keys(v.properties).reverse(),
                                                function (k1, v1) {
                                                    // console.log(k1);
                                                    // console.log(v1);
                                                    // console.log(v.properties[v1]);

                                                    if (arrColumnsChecked.indexOf(
                                                            v1) >= 0) {
                                                        if (v.properties[v1]
                                                            [
                                                                row
                                                            ] !=
                                                            undefined && v.properties[
                                                                v1][row] !=
                                                            '') {
                                                            table += '<td>' +
                                                                v
                                                                .properties[
                                                                    v1][row] +
                                                                '</td>';
                                                            markerContent +=
                                                                '<p><b>' +
                                                                v1 +
                                                                ':</b> ' +
                                                                v.properties[
                                                                    v1][row] +
                                                                '</p>';
                                                        } else {
                                                            table +=
                                                                '<td>--</td>';
                                                        }
                                                    }
                                                });
                                            arrMarkerContent.push(markerContent);
                                            table += '</tr>';
                                        }
                                    } else {
                                        for (var row = 0; row < v.geometry.coordinates
                                            .length; row++) {

                                            arrMarkerPos.push(v.geometry.coordinates[
                                                row]);
                                        }
                                    }
                                }
                            });
                            table += '</tbody></table></div></div>';
                            $(
                                '#bodyQuery').append(table);


                        }
                    }).catch(function (err) {
                        // console.log('error catch');
                        alert(err.responseText);
                        if (err.status === 401) {
                            $(location).attr('href', '/');

                        }
                    });
                });

            }
        }, 100);

    });
</script>