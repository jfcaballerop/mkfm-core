<script>
    const PI = 3.141592;

    var featurePaintCriticality = (function() {

        // variables y funciones privadas
        var paintHTML = function(form) {
            var html = [];
            var h = -1;
            $.each(form.formulaSpec.reverse(), function(i, fspec) {
                $('#selectFormula').append('<div class="radio-inline"><label class="radio-inline">' +
                    '<input type="radio" name="optionsRadios" id="option' + fspec.name + '" value="' + fspec.name + '" >' + fspec.name +
                    '</label></div>');
                html[++h] = '<div id="formulaTable' + fspec.name + '" style="display:none;">';
                html[++h] = '<div id="infoFormula' + fspec.name + '" >Note: To apply the values ​​of the formula, it is necessary to update the Tracks.';
                html[++h] = ' Be patient, the process can take several minutes.</div>';
                html[++h] = '<button type="button" onClick="clickButton(\'' + form.properties.HTML.id + '__' + fspec.name + '\');" id="' + form.properties.HTML.id + '__' + fspec.name + '" class="btn btn-success"><i class="fa fa-clock-o" aria-hidden="true"></i> Update ' + fspec.name + '</button>';
                html[++h] = '<i id="spinner' + form.properties.HTML.id + '__' + fspec.name + '" class="fa fa-spinner fa-pulse fa-2x fa-fw" style="display:none;"></i>';

                html[++h] = ' <div id="resultUpdate' + form.properties.HTML.id + '__' + fspec.name + '"></div>';
                html[++h] = '<table class="table table-bordered table-striped table-condensed" ><tbody id="formulaTableBody">';
                $.each(fspec, function(key, data) {
                    console.log(key);
                    console.log(data);
                    if (data.constructor === objectConstructor) {
                        html[++h] = '<tr>';
                        html[++h] = '<td  class="col-sm-3" rowspan="' + (Object.keys(data).length - 1) + '"><label class="col-sm-8 col-sm-8 control-label">' + key + '</label>';
                        html[++h] = '<div class="col-sm-4">';
                        html[++h] = '<input class="form-control" name="AssetCriticality__' + fspec.name + '__' + key + '" type="text" value="' + data.weight + '">';
                        html[++h] = '</div></td>';
                        var tr = 0;
                        $.each(data, function(j, data2) {
                            if (data2.constructor === objectConstructor) {

                                if (tr > 0) {
                                    html[++h] = '<tr>';
                                }
                                html[++h] = '<td class="col-sm-6"><label class="col-sm-3 control-label">' + data2.name +
                                    '<br>[Type: ' + data2.type + ']</label>';
                                html[++h] = '<div class="col-sm-2">';
                                html[++h] = '<input class="form-control" name="AssetCriticality__' + fspec.name + '__' + key + '__' + j + '" type="text" value="' + data2.weight + '"></div>';
                                html[++h] = '<div class="col-sm-7">' + data2.HTML_name + '</div>';
                                html[++h] = '</td>';
                                if (data2.scoring != undefined) {
                                    html[++h] = '<td class="col-sm-3">';
                                    $.each(data2.scoring, function(s, scoring) {
                                        html[++h] = '<label class="col-sm-8 control-label">' + s +
                                            '</label><div class="col-sm-4">';
                                        html[++h] = '<input class="form-control" name="AssetCriticality__' + fspec.name + '__' + key + '__' + j + '__' + s + '" type="text" value="' + scoring +
                                            '"></div>';

                                    });
                                    html[++h] = '</td>';
                                }
                                html[++h] = '</tr>';
                                tr++;
                                console.log(j + ': ' + data2);
                            }
                        });
                    };
                });
                //console.log(fs'</tbody></table>'pec.fname);
                html[++h] = '</tbody></table></div>';
                $('#formulaSpec').html(html.join(''));

            });


        };

        // API publica
        return {
            paintHTML: paintHTML
        }

    })();
    var featurePaintCondition = (function() {

        // variables y funciones privadas
        var paintHTML = function(form) {
            var html = [];
            var h = -1;
            $.each(form.formulaSpec, function(i, fspec) {
                $('#selectFormula').append('<div class="radio-inline"><label class="radio-inline">' +
                    '<input type="radio" name="optionsRadios" id="option' + fspec.name + '" value="' + fspec.name + '" >' + fspec.name +
                    '</label></div>');
                html[++h] = '<div id="formulaTable' + fspec.name + '" style="display:none;">';
                html[++h] = '<div id="infoFormula' + fspec.name + '" >Note: To apply the values ​​of the formula, it is necessary to update the Tracks.';
                html[++h] = ' Be patient, the process can take several minutes.</div>';
                html[++h] = '<button type="button" onClick="clickButton(\'' + form.properties.HTML.id + '__' + fspec.name + '\');" id="' + form.properties.HTML.id + '__' + fspec.name + '" class="btn btn-success"><i class="fa fa-clock-o" aria-hidden="true"></i> Update ' + fspec.name + '</button>';
                html[++h] = '<i id="spinner' + form.properties.HTML.id + '__' + fspec.name + '" class="fa fa-spinner fa-pulse fa-2x fa-fw" style="display:none;"></i>';

                html[++h] = ' <div id="resultUpdate' + form.properties.HTML.id + '__' + fspec.name + '"></div>';
                html[++h] = '<table class="table table-bordered table-striped table-condensed" ><tbody id="formulaTableBody">';
                $.each(fspec, function(key, data) {
                    console.log(key);
                    console.log(data);
                    if (data.constructor === objectConstructor) {
                        html[++h] = '<tr>';
                        html[++h] = '<td  class="col-sm-3" rowspan="' + (Object.keys(data).length - 1) + '"><label class="col-sm-8 col-sm-8 control-label">' + key + '</label>';
                        html[++h] = '<div class="col-sm-4">';
                        html[++h] = '<input class="form-control" name="AssetCriticality__' + fspec.name + '__' + key + '" type="text" value="' + data.weight + '">';
                        html[++h] = '</div></td>';
                        var tr = 0;
                        $.each(data, function(j, data2) {
                            if (data2.constructor === objectConstructor) {

                                if (tr > 0) {
                                    html[++h] = '<tr>';
                                }
                                html[++h] = '<td class="col-sm-6"><label class="col-sm-3 control-label">' + data2.name +
                                    '<br>[Type: ' + data2.type + ']</label>';
                                html[++h] = '<div class="col-sm-2">';
                                html[++h] = '<input class="form-control" name="AssetCriticality__' + fspec.name + '__' + key + '__' + j + '" type="text" value="' + data2.weight + '"></div>';
                                html[++h] = '<div class="col-sm-7">' + data2.HTML_name + '</div>';
                                html[++h] = '</td>';
                                if (data2.scoring != undefined) {
                                    html[++h] = '<td class="col-sm-3">';
                                    $.each(data2.scoring, function(s, scoring) {
                                        html[++h] = '<label class="col-sm-8 control-label">' + s +
                                            '</label><div class="col-sm-4">';
                                        html[++h] = '<input class="form-control" name="AssetCriticality__' + fspec.name + '__' + key + '__' + j + '__' + s + '" type="text" value="' + scoring +
                                            '"></div>';

                                    });
                                    html[++h] = '</td>';
                                }
                                html[++h] = '</tr>';
                                tr++;
                                console.log(j + ': ' + data2);
                            }
                        });
                    };
                });
                //console.log(fs'</tbody></table>'pec.fname);
                html[++h] = '</tbody></table></div>';
                $('#formulaSpec').html(html.join(''));

            });


        };

        // API publica
        return {
            paintHTML: paintHTML
        }

    })();
</script>