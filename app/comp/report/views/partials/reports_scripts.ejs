<script>
    $(document).ready(function() {

        $(":radio").prop('disabled', true);
        $("#generateReport").prop('disabled', true);

        $('#openPdf').click(function() {

            pdfMake.createPdf(docDefinition).open();
        });

        $("#searchtool").on('keyup', function(e) {
            var $this = $(this);
            if (e.keyCode == 13 || e.keyCode == undefined) {
                // Do something
                // alert('Buscando ...' + $this.val().length);
                $('#error').hide();
                $('#error').empty();
                $('#response').hide();
                $('#response').empty();
                $("#datainfophoto").empty();
                $("#datainfophoto").hide();
                $('#divmap1').empty();
                $("#generaldataupload").prop("checked", false);
                $("#generaldata").prop("checked", false);
                $("#inventorydata").prop("checked", false);
                $("#operation").prop("checked", false);
                $("#risk").prop("checked", false);
                // $('#datainfo').show();
                // $('#dataupload').show();
                $('#datainfo').hide();
                $('#dataupload').hide();

                var dataPost = {};

                if ($this.val().length <= 0) {
                    $('#error').hide();
                    $('#error').empty();
                    $('#error').append("Empty value.<br>Try again.");
                    $('#error').show();

                } else {


                    // $('#datainfo').show();
                    // $('#dataupload').show();
                    var p1 = $.ajax({
                        url: '/auth/WEB/infodatatrack/list_ifdt/' + $this.val(),
                        data: JSON.stringify(dataPost),
                        type: 'POST',
                        contentType: 'application/json'
                    }, function (data) {
                        //// //console.log('koboinfo ' + JSON.stringify(data));
                        return (data);
                    });
                    var p2 = $.ajax({
                        url: '/auth/WEB/gis/getFilesByAssetCode/' + $this.val(),
                        data: JSON.stringify(dataPost),
                        type: 'POST',
                        contentType: 'application/json'
                    }, function (data) {
                        //// //console.log('koboinfo ' + JSON.stringify(data));
                        return (data);
                    });


                    Promise.all([p1, p2]).then(function (values) {
                        $('#spinner').show();
                        map.data.forEach(function (feature) {
                            // If you want, check here for some constraints.
                            // if (feature.getProperty('nameoption') === 'Main Road') {
                            map.data.remove(feature);
                            // }

                        });
                        ifdt = values[0];
                        filelist = values[1];
                        ////console.log(ifdt);
                        if (ifdt.properties.asset_type === 'ERROR') {
                            $('#datainfo').hide();
                            $('#dataupload').hide();
                            $('#error').show();
                            $('#error').append("Search not found.<br>Try again.");
                            map.setCenter(new google.maps.LatLng(15.41, -61.32));
                            map.panTo(new google.maps.LatLng(15.41, -61.32));
                            map.setZoom(11);

                        } else {
                            $('#datainfo').show();
                            $('#dataupload').show();

                            if (ifdt.properties.koboedit !== undefined &&
                                ifdt.properties.koboedit.length > 0 &&
                                ifdt.properties.koboedit[0] !== undefined &&
                                ifdt.properties.koboedit[0].kobo_id !== undefined) {
                                var dataPhotoPost = {};
                                var pphoto = $.ajax({
                                    url: '/auth/WEB/koboinfo/list_koboinfos/' +
                                        ifdt.properties.koboedit[0].kobo_id,
                                    data: JSON.stringify(dataPhotoPost),
                                    type: 'POST',
                                    contentType: 'application/json'
                                }, function (data) {
                                    //// //console.log('koboinfo ' + JSON.stringify(data));
                                    return (data);
                                });
                                Promise.all([pphoto]).then(function (values) {
                                    koboinfo = values[0];
                                    $.each(koboinfo, function (key, value) {
                                        if (key === 'properties') {
                                            $.each(value, function (kprop,
                                                vprop) {
                                                ////console.log(kprop, vprop);
                                                if (kprop ===
                                                    "_attachments") {

                                                    $(
                                                        "#datainfophoto"
                                                    ).empty();
                                                    $(
                                                        "#datainfophoto"
                                                    ).show();
                                                    $.each(vprop,
                                                        function (
                                                            kfoto,
                                                            vfoto
                                                        ) {
                                                            var
                                                                fotosmall =
                                                                    vfoto
                                                                        .replace(
                                                                            ".jpg",
                                                                            "-small.jpg"
                                                                        );
                                                            $(
                                                                "#datainfophoto"
                                                            )
                                                                .append(
                                                                    '<img src="' +
                                                                    fotosmall +
                                                                    '">'
                                                                );
                                                            // $("#formkobo").append('<input name="kobo[properties][' + kprop + ']" required class="form-control" value="' + vfoto + '" type="hidden">');
                                                        });
                                                }


                                            });
                                        };
                                    });
                                });
                            }

                            if (ifdt.properties.asset_type === 'ROAD') {
                                $('#response').empty();
                                $('#response').show();
                                $('#response').append("Asset type: " + ifdt.properties.asset_type);

                                jsonObject = ifdt;
                                //// //console.log(jsonObject);
                                jsonObject.properties.color = "#5b5e63";
                                jsonObject.properties.nameoption = "Main Road";
                                map.data.addGeoJson(jsonObject);
                                map.setCenter(new google.maps.LatLng(ifdt.geometry.coordinates[
                                    0][1], ifdt.geometry.coordinates[0][0]));
                                map.panTo(new google.maps.LatLng(ifdt.geometry.coordinates[0][1],
                                    ifdt.geometry.coordinates[0][0]));
                                if (ifdt.geometry.coordinates.length > 0 && ifdt.geometry.coordinates
                                    .length <= 100) {
                                    map.setZoom(19);
                                } else if (ifdt.geometry.coordinates.length > 100 && ifdt.geometry
                                    .coordinates.length <= 400) {

                                    map.setZoom(16);

                                } else if (ifdt.geometry.coordinates.length > 400 && ifdt.geometry
                                    .coordinates.length <= 1000) {
                                    map.setZoom(13);

                                } else {
                                    map.setZoom(11);

                                }
                            } else if (ifdt.properties.asset_type === 'BRIDGE') {
                                $('#response').empty();
                                $('#response').show();
                                $('#response').append("Asset type: " + ifdt.properties.asset_type);


                                jsonObject = ifdt;
                                //// //console.log(jsonObject);
                                jsonObject.properties.color = "#F47983";
                                jsonObject.properties.nameoption = "Bridge";
                                map.data.addGeoJson(jsonObject);
                                map.setCenter(new google.maps.LatLng(ifdt.geometry.coordinates[
                                    0][1], ifdt.geometry.coordinates[0][0]));
                                map.panTo(new google.maps.LatLng(ifdt.geometry.coordinates[0][1],
                                    ifdt.geometry.coordinates[0][0]));
                                map.setZoom(22);
                            } else if (ifdt.properties.asset_type === 'GEOT' || ifdt.properties
                                .asset_type === 'GEOT2') {
                                $('#response').empty();
                                $('#response').show();
                                $('#response').append("Asset type: " + ifdt.properties.asset_type);

                                jsonObject = ifdt;
                                //// //console.log(jsonObject);
                                jsonObject.properties.color = "green";
                                jsonObject.properties.nameoption = "Geot";
                                map.data.addGeoJson(jsonObject);
                                map.setCenter(new google.maps.LatLng(ifdt.geometry.coordinates[
                                    0][1], ifdt.geometry.coordinates[0][0]));
                                map.panTo(new google.maps.LatLng(ifdt.geometry.coordinates[0][1],
                                    ifdt.geometry.coordinates[0][0]));
                                map.setZoom(19);
                            } else if (ifdt.properties.asset_type === 'CULVERT') {
                                $('#response').empty();
                                $('#response').show();
                                $('#response').append("Asset type: " + ifdt.properties.asset_type);
                                jsonObject = ifdt;
                                //// //console.log(jsonObject); 
                                jsonObject.properties.color = "#a17cff";
                                jsonObject.properties.nameoption = "Culvert";
                                map.data.addGeoJson(jsonObject);
                                map.setCenter(new google.maps.LatLng(ifdt.geometry.coordinates[
                                    0][1], ifdt.geometry.coordinates[0][0]));
                                map.panTo(new google.maps.LatLng(ifdt.geometry.coordinates[0][1],
                                    ifdt.geometry.coordinates[0][0]));
                                map.setZoom(22);
                            } else if (ifdt.properties.asset_type === 'DRAINAGE') {
                                $('#response').empty();
                                $('#response').show();
                                $('#response').append("Asset type: " + ifdt.properties.asset_type);
                                jsonObject = ifdt;
                                //// //console.log(jsonObject); 
                                jsonObject.properties.color = "#135dd6";
                                jsonObject.properties.nameoption = "Drainage";
                                map.data.addGeoJson(jsonObject);
                                map.setCenter(new google.maps.LatLng(ifdt.geometry.coordinates[
                                    0][1], ifdt.geometry.coordinates[0][0]));
                                map.panTo(new google.maps.LatLng(ifdt.geometry.coordinates[0][1],
                                    ifdt.geometry.coordinates[0][0]));
                                map.setZoom(22);
                            }
                            ifdtobject = ifdt;
                            // //console.log(ifdt);
                        }
                        $('#spinner').hide();

                    });
                }
            } else {
                if ($this.val().length > 3) {
                    // console.log('keyup');
                    $('#json-datalist').empty();
                    if (true) {
                        // Do something
                        // alert('Buscando ...' + $this.val().length);
                        $('#error').hide();
                        $('#error').empty();
                        $('#response').hide();
                        $('#response').empty();
                        $("#datainfophoto").empty();
                        $("#datainfophoto").hide();
                        $('#divmap1').empty();
                        $("#generaldataupload").prop("checked", false);
                        $("#generaldata").prop("checked", false);
                        $("#inventorydata").prop("checked", false);
                        $("#operation").prop("checked", false);
                        $("#risk").prop("checked", false);
                        // $('#datainfo').show();
                        // $('#dataupload').show();
                        $('#datainfo').hide();
                        $('#dataupload').hide();

                        var dataPost = {};

                        if ($this.val().length <= 0) {
                            $('#error').hide();
                            $('#error').empty();
                            $('#error').append("\n \n Empty value.<br>Try again.");
                            $('#error').show();

                        } else {


                            // $('#datainfo').show();
                            // $('#dataupload').show();
                            var p1 = $.ajax({
                                url: '/auth/WEB/infodatatrack/list_ifdt_general/' + $this.val(),
                                data: JSON.stringify(dataPost),
                                type: 'POST',
                                contentType: 'application/json'
                            }, function (data) {
                                //// //console.log('koboinfo ' + JSON.stringify(data));
                                return (data);
                            });
                            var p2 = $.ajax({
                                url: '/auth/WEB/gis/getFilesByAssetCode/' + $this.val(),
                                // url: '/auth/WEB/gis/getFilesByAssetCode_general/' + $this.val(),
                                data: JSON.stringify(dataPost),
                                type: 'POST',
                                contentType: 'application/json'
                            }, function (data) {
                                //// //console.log('koboinfo ' + JSON.stringify(data));
                                return (data);
                            });

                            delay(function () {
                                console.log('Time elapsed!');
                                Promise.all([p1, p2]).then(function (values) {
                                    $('#spinner').show();
                                    map.data.forEach(function (feature) {
                                        // If you want, check here for some constraints.
                                        // if (feature.getProperty('nameoption') === 'Main Road') {
                                        map.data.remove(feature);
                                        // }


                                    });
                                    console.log(values);
                                    console.log(Object.keys(values[0]));
                                    ifdt = values[0];
                                    filelist = values[1];
                                    $('#datainfo').hide();
                                    $('#dataupload').hide();
                                    $('#error').show();
                                    // $('#error').append(Object.keys(values[0]));
                                    var html1 = '';
                                    $.each(values[0], function (key, element) {

                                        // html1 += '<option value="' + key + '">';
                                        $('#json-datalist').append(
                                            '<option value="' + key + '">');
                                    });
                                    // .exec($('#json-datalist').html(html1));


                                    $('#error').append("<br><br>" +
                                        "Search not found.<br>Try again.");
                                    map.setCenter(new google.maps.LatLng(15.41, -61.32));
                                    map.panTo(new google.maps.LatLng(15.41, -61.32));
                                    map.setZoom(11);

                                    $('#spinner').hide();

                                });
                            }, 100);

                        }
                    }
                }
            }

        });

        var selected;
        $(":radio").change(function() {
            $this = $(this);
            // console.log($this[0].value);
            selected = $this[0].value;
            $("#generateReport").prop('disabled', false);

        });



        $('#generateReport').click(function() {
            var dataPost = {};

            var p1 = $.ajax({
                url: '/auth/WEB/report/generatePDF/' + selected + '/' + ifdt.properties.asset_type + '/' + $(
                    '#searchtool').val(),
                data: JSON.stringify(dataPost),
                type: 'POST',
                contentType: 'application/json'
            }, function(data) {
                //// console.log('koboinfo ' + JSON.stringify(data));
                return (data);
            });
            Promise.all([p1]).then(function(values) {
                $('#spinner').show();
                ret = values[0];
                // console.log(ret);
                if (ret.result !== 'OK') {
                    $('#error').show();
                    $('#error').append("No report available<br>Try again.");

                } else {
                    $('#response').empty();
                    $('#iframeContainer').empty();
                    $('#response').show();
                    $('#response').append("Generating...");
                    //$(":radio").prop('disabled', false);
                    $("#generateReport").prop('disabled', true);
                    $('#spinner').hide();
                    docDefinition = ret.docDefinition;
                    var pdfDocGenerator = pdfMake.createPdf(docDefinition);
                    pdfDocGenerator.getDataUrl((dataUrl) => {
                        const targetElement = document.querySelector('#iframeContainer');
                        const iframe = document.createElement('iframe');
                        iframe.src = dataUrl;
                        iframe.style.width = "100%";
                        iframe.style.height = ($(window).height() - 200) + 'px';
                        targetElement.appendChild(iframe);
                    });
                    // pdfMake.createPdf(docDefinition).open();

                }

                $('#spinner').hide();

            });

        });
    });
</script>