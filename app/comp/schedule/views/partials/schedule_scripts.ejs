<script>
    $(document).ready(function () {

        var dataSchedule = <%- JSON.stringify(schedules) %>;
        var type = <%- JSON.stringify(type) %>;

        console.log(type);

        function updateModalDataSource(data, option) {
            $('#event-modal select[name="event-name"]').html('');
            $('#event-modal select[name="event-type"]').html('');
            switch (option) {
                case 'save':
                    for (var d in data) {
                        if (!data[d].planned) {
                            $('#event-modal select[name="event-name"]').append($("<option></option>")
                                .attr("value", data[d].name)
                                .text(data[d].name));
                            $('#event-modal select[name="event-type"]').append($("<option></option>")
                                .attr("value", data[d].type)
                                .text(data[d].type));
                        }
                    }

                    break;
                case 'update':
                    for (var d in data) {
                        if (data[d].planned) {
                            $('#event-modal select[name="event-name"]').append($("<option></option>")
                                .attr("value", data[d].name)
                                .text(data[d].name));
                            $('#event-modal select[name="event-type"]').append($("<option></option>")
                                .attr("value", data[d].type)
                                .text(data[d].type));
                        }
                    }

                    break;

                default:
                    break;
            }
        }




        function formatDate(date) {
            var monthNames = [
                "January", "February", "March",
                "April", "May", "June", "July",
                "August", "September", "October",
                "November", "December"
            ];

            var day = date.getDate();
            var monthIndex = date.getMonth();
            var year = date.getFullYear();

            return day + ' ' + monthNames[monthIndex] + ' ' + year;
        }

        function completeEvent(event) {
            for (var i in dataSource) {
                if (dataSource[i].id == event.id) {


                    var dataPost = {};

                    var p1 = $.ajax({
                        url: '/auth/WEB/schedule/completeEvent/' + event.name + '/' + type,
                        data: JSON.stringify(dataPost),
                        type: 'POST',
                        contentType: 'application/json'
                    }, function (data) {
                        // console.log('koboinfo ' + JSON.stringify(data));
                        return (data);
                    });
                    Promise.all([p1]).then(function (values) {
                        ret = values[0];
                        console.log(ret);
                        // if (ret.result !== 'OK') {
                        //     $('#error').show();
                        //     $('#error').append("No updated dates.<br>Try again.");

                        // } else {
                        //     $('#response').empty();
                        //     $('#iframeContainer').empty();
                        //     $('#response').show();
                        //     $('#response').append("Saved ok.");
                        //     $('#spinner').hide();

                        // }
                        var nameEventTd = event.name.split('__');

                        var $selectTR = $('#tableSchedule tr td:contains("' + nameEventTd[0] + '-' +
                            nameEventTd[1] + '")').parent();
                        $selectTR.find("td:eq(4)").fadeOut(function () {
                            $(this).html('<i class="fas fa-check text-success"></i>').fadeIn(
                                500).fadeOut(500).fadeIn(500);
                        });

                    });

                    break;
                }
            }
        }

        function editEvent(event, type) {
            var dataSource = $('#calendar').data('calendar').getDataSource();
            type === 'new' ? updateModalDataSource(dataSource, 'save') : updateModalDataSource(dataSource,
                'update');


            $('#event-modal input[name="event-index"]').val(event ? event.id : '');
            $('#event-modal select[name="event-name"]').val(event ? event.name : '');
            $('#event-modal select[name="event-type"]').val(event ? event.type : '');
            $('#event-modal input[name="event-start-date"]').datepicker('update', event ? event.startDate : '');
            $('#event-modal input[name="event-end-date"]').datepicker('update', event ? event.endDate : '');
            var $selectTR = $('#tableSchedule tr td:contains("' + event.name + '")').parent();
            $selectTR.css('color', event.color).css(
                'font-weight', 'normal');
            $selectTR.find("td:eq(2)").fadeOut(function () {
                $(this).text(moment(event.startDate).format('YYYY-MM-DD')).fadeIn();
            });
            $selectTR.find("td:eq(3)").fadeOut(function () {
                $(this).text(moment(event.endDate).format('YYYY-MM-DD')).fadeIn();
            });
            $('#event-modal').modal();
        }

        function deleteEvent(event) {
            var dataSource = $('#calendar').data('calendar').getDataSource();

            for (var i in dataSource) {
                if (dataSource[i].id == event.id) {
                    dataSource.splice(i, 1);
                    break;
                }
            }

            $('#calendar').data('calendar').setDataSource(dataSource);
        }

        function getColor(param) {
            var color = 'black';
            switch (param) {
                case 'PAVEMENTS':
                    color = 'grey';
                    break;
                case 'BRIDGES':
                    color = '#ff00aa';
                    break;
                case 'CULVERTS':
                    color = 'blue';
                    break;
                case 'GEOT':
                    color = 'green';
                    break;

                default:
                    break;
            }

            return color;

        }

        function saveEvent() {
            var event = {
                id: $('#event-modal input[name="event-index"]').val(),
                name: $('#event-modal select[name="event-name"] option:selected').text(),
                type: $('#event-modal select[name="event-type"] option:selected').text(),
                startDate: $('#event-modal input[name="event-start-date"]').datepicker('getDate'),
                endDate: $('#event-modal input[name="event-end-date"]').datepicker('getDate'),
                color: getColor($('#event-modal select[name="event-type"] option:selected').text()),
                planned: true
            }

            var dataSource = $('#calendar').data('calendar').getDataSource();

            if (event.id) {
                for (var i in dataSource) {
                    if (dataSource[i].id == event.id) {
                        dataSource[i].name = event.name;
                        dataSource[i].type = event.type;
                        dataSource[i].startDate = event.startDate;
                        dataSource[i].endDate = event.endDate;
                        dataSource[i].color = event.color;
                    }
                }
            } else {
                var newId = 0;
                for (var i in dataSource) {
                    if (dataSource[i].id > newId) {
                        newId = dataSource[i].id;
                    }
                }

                newId++;
                event.id = newId;
                //elimino el anterior

                for (var d in dataSource) {
                    console.log(event.name);
                    var index = dataSource[d].name.indexOf(event.name);
                    if (index > -1) {
                        dataSource.splice(d, 1);
                    }

                }

                dataSource.push(event);
            }
            var nameEventTd = event.name.split('__');

            var $selectTR = $('#tableSchedule tr td:contains("' + nameEventTd[0] + '-' + nameEventTd[1] + '")')
                .parent();
            $selectTR.css('color', event.color).css(
                'font-weight', 'normal');
            $selectTR.find("td:eq(2)").fadeOut(function () {
                $(this).text(moment(event.startDate).format('YYYY-MM-DD')).fadeIn(1000).fadeOut(1000).fadeIn(
                    1000).fadeOut(1000).fadeIn(
                    1000);
            });
            $selectTR.find("td:eq(3)").fadeOut(function () {
                $(this).text(moment(event.endDate).format('YYYY-MM-DD')).fadeIn(1000).fadeOut(1000).fadeIn(
                    1000).fadeOut(1000).fadeIn(
                    1000);
            });
            updateModalDataSource(dataSource, 'save');
            $('#calendar').data('calendar').setDataSource(dataSource);
            $('#event-modal').modal('hide');

            var dataPost = {};

            var p1 = $.ajax({
                url: '/auth/WEB/schedule/saveEvent/' + event.name + '/' + moment(event.startDate).format(
                    'YYYY-MM-DD') + '/' + moment(event.endDate).format('YYYY-MM-DD') + '/' + type,
                data: JSON.stringify(dataPost),
                type: 'POST',
                contentType: 'application/json'
            }, function (data) {
                // console.log('koboinfo ' + JSON.stringify(data));
                return (data);
            });
            Promise.all([p1]).then(function (values) {
                ret = values[0];
                console.log(ret);
                if (ret.result !== 'OK') {
                    $('#error').show();
                    $('#error').append("No updated dates.<br>Try again.");

                } else {
                    $('#response').empty();
                    $('#iframeContainer').empty();
                    $('#response').show();
                    $('#response').append("Saved ok.");
                    $('#spinner').hide();

                }


            });



        }

        var currentYear = new Date().getFullYear();
        var dataSource = [];
        var i = 0;
        for (var s of dataSchedule) {
            //console.log(s);

            var val = {
                id: i,
                name: s.properties.code,
                type: s.type,
                startDate: new Date(moment(s.startDate).format('YYYY'), moment(s.startDate).format('MM') -
                    1, moment(s.startDate).format('DD')),
                endDate: new Date(moment(s.endDate).format('YYYY'), moment(s.endDate).format('MM') - 1,
                    moment(s.endDate).format('DD')),
                color: s.startDate !== undefined && s.endDate !== undefined ? s.config.color : 'red',
                planned: s.startDate !== undefined && s.endDate !== undefined ? true : false

            }

            dataSource.push(val);

            i++;
        }
        updateModalDataSource(dataSource, 'save');

        // page is now ready, initialize the calendar...

        $('#calendar').calendar({
            enableContextMenu: true,
            enableRangeSelection: true,
            contextMenuItems: [{
                text: 'Update',
                click: editEvent
            }, {
                text: 'Complete',
                click: completeEvent
            }],
            selectRange: function (e) {
                editEvent({
                    startDate: e.startDate,
                    endDate: e.endDate
                }, 'new');
            },
            mouseOnDay: function (e) {
                if (e.events.length > 0) {
                    var content = '';
                    for (var i in e.events) {
                        console.log(e.events[i].startDate);
                        content += '<div class="event-tooltip-content">' +
                            '<div class="event-name small" style="color:' + e.events[i].color +
                            ';font-weight:bold" >' + e.events[
                                i].name + '</div>' +
                            '<div class="event-type small">' + e.events[i].type + '</div>' +
                            '<div class="event-start-date small">' + formatDate(e.events[i].startDate) +
                            ' - ' + formatDate(e.events[i].endDate) + '</div>' +
                            '</div>';
                        formatDate
                    }

                    $(e.element).popover({
                        trigger: 'manual',
                        container: 'body',
                        html: true,
                        content: content
                    });

                    $(e.element).popover('show');
                }
            },
            mouseOutDay: function (e) {
                if (e.events.length > 0) {
                    $(e.element).popover('hide');
                }
            },
            dayContextMenu: function (e) {
                $(e.element).popover('hide');
            },
            dataSource: dataSource
        });

        $('#save-event').click(function () {
            saveEvent();
        });
    });
</script>